[QADOC]


########## ITEM SECION #############


[QA]
ID: qa_incfd
Q: どのようにファイル記述子のオペレーティングシステムの制限を増やすのですか？

A: <p>TUNIXのようなオペレーティングシステムでは、システムレベルとプロセスレベルのファイル記述子の制限があります。
LiteSpeedサーバーは少数のサーバープロセスを使用してすべてのクライアントにサービスを提供し、各要求では最大4つのファイル記述子が必要になる場合があります。
したがって、サーバーが処理できる同時要求の最大数は、プロセスレベルのファイル記述子の制限によって制限される可能性があります。
この制限を高い値に設定することが重要です。</p>
<p>サーバーがrootユーザーによって起動された場合、サーバーの構成に基づいてこの制限を自動的に調整しようとします。
それ以外の場合は、この制限をroot特権で手動で調整する必要があります。</p>

<p>{cmd}ulimit -a{/}を使用して、プロセスファイル記述子あたりの現在の設定を確認してください。
この制限を変更するには、root特権が必要です。
マシンをリブートした後に自動的に制限を設定するために、スタートアップスクリプトにこの設定を入れることができます。</p> 

<ul>
	<li><p><strong>Linuxカーネル：</strong></p></li>
	開いているファイルのシステムレベルの制限を確認してください：<br>
	&nbsp;&nbsp;&nbsp;{cmd}more /proc/sys/fs/file-max{/}<br>
	それが低く見えたら、限界を以下のように増やしてください：<br>
	&nbsp;&nbsp;&nbsp;{cmd}echo 40000 > /proc/sys/fs/file-max{/}<br>
	カーネル2.2.xの場合は、次のものも必要です:<br>
	&nbsp;&nbsp;&nbsp;{cmd}echo 65535 > /proc/sys/fs/inode-max{/}<br>
	次に、現在のプロセス制限を次のように増加させます:<br>
	&nbsp;&nbsp;&nbsp;{cmd}ulimit -n 10000{/}<br>
	注：普通のユーザは、少なくともKernel 2.4.xでは{cmd} ulimit -n xxxx {/}を使って
    現在のプロセスの制限を変更することができます。
    しかし、以下の行を/etc/security/limits.confに追加する必要があります：<br>
	
	&nbsp;&nbsp;&nbsp;{cmd}soft nofile 2048{/}<br>
	&nbsp;&nbsp;&nbsp;{cmd}hard nofile 8192{/}<br><br>

	<li><p><strong>Solaris 2.4+:</strong></p></li>
	/etc/systemに次の行を追加する必要があります。:<br>
	* ファイル記述子にハードリミットを設定する： {cmd}set rlim_fd_max = XXXX{/}<br>
	* ファイル記述子にソフトリミットを設定する： {cmd}set rlim_fd_cur = XXXX{/}<br><br>
	
	<li><p><strong>FreeBSD:</strong></p></li>
	/boot/loader.confに次の行を追加します。<br>
	{cmd}set kern.maxfiles=XXXX{/}
</ul>

END_A

SEE_ALSO: 

[END_QA]



[QA]
ID: qa_namevh
Q: 名前ベースのバーチャルホスティングを設定するには？

A: 名前ベースのバーチャルホスティングでは、あなたが持っているIPアドレスの数より多くのWebサイトをホストすることができます。
この場合、複数のドメイン名が同じIPアドレスを指しています。

名前ベースのバーチャルホスティングを設定するには、次のガイドラインを使用します。

<ol>
<li>DNSを正しく設定してください。
	<br>Webサイトのドメイン名をWebサーバーが使用するIPアドレスに転送します。
これは、通常、WebサイトのDNSゾーンに「A」という名前のエントリを追加することによって行われます。
</li>
<li>Web管理コンソールで設定します：
	<ol><li>Webサイトごとにバーチャルホストを作成します。</li>
	    <li>リスナーを作成します。<br>
	        1つのリスナーを作成して、すべてのローカルIPアドレスでリッスンすることができます。
            または、1つの特定のIPアドレスだけをリッスンする1つのリスナーで複数のリスナーを作成できます。
	    </li>
	    <li>バーチャルホストマッピングを割り当てます。<br>
            リスナー設定に移動し、{TBL=Listeners_Help#virtualHostMapping}テーブルの[編集]をクリックします。
            マッピングするバーチャルホストをすべて確認し、対応する{ITEM=Listeners_Help#domainName}を指定します。<br>
		注：{val}your.domain{/}は{val}www.your.domain{/}と{val}your.domain{/}の両方に一致します。
        主要な "www" ドメイン名には無視されます。
	    </li>
	  </ol>
</li>
</ol>
END_A

SEE_ALSO: 

[END_QA]



[QA]
ID: qa_ipvh
Q: IPベースのバーチャルホスティングを設定するには？

A: IPベースのバーチャルホスティングには、各Webサイトに固有のIPアドレスが少なくとも1つ必要です。
1つのIPアドレスは1つのバーチャルホスト専用です。
これにより、 "http://192.168.0.1/index.html"のようなURLを持つバーチャルホストにアクセスすることができ、Webサーバーは対応するバーチャルホストコンテキストを使用してこの要求を処理します。
SSLを使用する場合は、IPベースのバーチャルホストごとに一意のSSL証明書を割り当てる必要があります。

<ol>
  <li>ホストするWebサイトごとに少なくとも1つのIPアドレスを割り当てます。<br>
     ヒント：1つのネットワークアダプタに複数のIPを割り当てるIPエイリアスを作成できます。</li>
  <li>DNSを正しく設定します。<br>ドメイン名を対応するIPアドレスに割り当てます。</li>
  <li>リスナーを作成します。 あなたには2つの選択肢があります：</li>
     <ul>
        <li>すべてのIPをリスンする1つのリスナーを作成し、上記のように1つのリスナーを共有するようにバーチャルホストのマッピングを構成します。</li>
	<li>別の選択肢は、各IPに対して1つのリスナーを作成することです。
        リスナーは、ワイルドカードドメイン名{val}*{/}を持つ対応するバーチャルホストにのみ割り当てます。<br>
        独自のSSL秘密鍵と証明書を各リスナーに割り当てることができるため、各Webサイトで独自の証明書を使用できます。
	</li>
    </ul>
</ol>

END_A

SEE_ALSO: 

[END_QA]



[QA]
ID: qa_dos
Q: サービス拒否（DoS）攻撃と分散サービス拒否（DDoS）攻撃を軽減する方法は？

A: LiteSpeedサーバーは、HTTPプロトコルレベルでDoS攻撃とDDoS攻撃の影響を軽減し、さらにはそれを排除することができます。 以下の設定は、攻撃に役立ちます。

<ul>
  <li>{PAGE=ServTuning_Help}設定の下で：</li>
     <ol>
        <li>{ITEM=ServTuning_Help#maxReqURLLen}, 
			{ITEM=ServTuning_Help#maxReqHeaderSize},
			{ITEM=ServTuning_Help#maxReqBodySize},  
			{ITEM=ServTuning_Help#maxDynRespHeaderSize}
			 そして {ITEM=ServTuning_Help#maxDynRespSize}
           　を実際に必要な値を上回る値に設定します。 
           　これはメモリ使用量を減らし、悪い要求を迅速に識別するのに役立ちます。
        </li>
	<li>{val}30{/}の周りに{ITEM=ServTuning_Help#connTimeout}を設定します;<br>
	   {val}15{/}以下にで{ITEM=ServTuning_Help#keepAliveTimeout}を設定します;<br>
	   {ITEM=ServTuning_Help#maxKeepAliveReq}を少なくとも{val}100{/}以上に設定してください。<br>
	   これにより、できるだけ早く停止した接続を閉じ、他のクライアントが接続を利用できるようになります。
	</li>
     </ol>
     <br>
     
  <li>{PAGE=ServSecurity_Help}設定の下で：</li>
     <ol>
        <li>{TBL=ServSecurity_Help#accessControl} - {ITEM=ServSecurity_Help#accessControl_deny}があなたのWebサーバーを悪用するIPをブロックします。</li>
	<li>1つのIPアドレスからの同時接続数を制御するには、{TBL = ServSecurity_Help#perClientConnLimit}を使用します。
制限に達すると、WebサーバーはそのIPアドレスからの新規に受け入れられた接続を直ちに閉じ、次の保留中の接続に移動します。<br>

	    今日、ほとんどのWebブラウザは永続的な接続をサポートしています（1つの接続で複数のリクエストをパイプライン化しているため）、必要な接続数は非常に少ないです。
本質的に、1つの接続で十分です。 ただし、一部のWebブラウザは、ダウンロードを高速化するために追加の接続を確立しようとします。<br>

	    したがって、1つのIPから4〜10の接続を許可することをお勧めします。
それ以下の場合は、通常のWebサービスに影響する可能性があります。<br>

	    IPごとの制限により、Webサーバーはより一意のクライアントに対応できます。
一意のクライアントの最小数は、{ITEM=ServTuning_Help#maxConnections}をクライアントごとの最大接続数で除算して得られます。
	</li>
	<li>IPレベルの抑制を有効にする：<br>
	    {ITEM=ServSecurity_Help#outBandwidth}を{val}0{/}より大きく設定してください（0はスロットリングを無効にします）。
制限は、4KB/sec単位の最も近い境界まで切り上げられます。<br>
	
	    このようにして、制限されたネットワーク帯域幅は、高速ネットワーク接続を備えた数人のクライアントによって消費されることはありません。 より多くのクライアントにサービスされます。
	</li>
	<li>サーバーが異なるIPからの何百もの要求によって同じURLで浸水した場合、{TBL=Context_Help#generalContext}を作成してそのURLへのアクセスをブロックすることができます。
コンテキスト{ITEM=Context_Help#expuri}は、そのURLに一致するか、または{ITEM=Context_Help#allowBrowse}が{val}No{/}に設定されている必要があります。<br>
	    
	   たとえば、サーバーが "/foo/bar.html"で叩かれた場合、正確なURI={val}/foo/bar.html{/}のコンテキストを追加するか、URI={val}/foo/{/}は"/foo/"で始まるすべてのURLをブロックします。
	</li>
   </ol>
</ul>

END_A

SEE_ALSO: 

[END_QA]



[QA]
ID: qa_gzip
Q: ネットワーク帯域幅を節約するためにGZIP圧縮を使用するには？

A: LiteSpeed Webサーバーは、静的および動的に生成されたコンテンツの圧縮応答を送信できます。
WebAdminコンソールから、サーバー（TBL=ServTuning_Help#gzipTuning）ページで設定できます。

<ul>
<li>{ITEM=ServTuning_Help#enableGzipCompress}設定は、静的コンテンツと動的コンテンツの両方に対する全体的なコントローラです。
</li>

<li>静的ファイルの要求が来ると、Webサーバーはまず、圧縮されていないファイルがあるディレクトリと同じディレクトリで、対応するgzip圧縮バージョンを探します。
圧縮されたファイルは、元のファイルよりも新しいファイルと小さい場合にのみ使用されます。
圧縮ファイルが存在しないか古い場合は、{ITEM=ServTuning_Help#gzipAutoUpdateStatic}が有効になっている場合、Webサーバは自動的にgzip圧縮ファイルを作成/更新できます。 <br>

圧縮はかなりサーバー集中型なので、Webサーバーは、次のルールに基づいて、圧縮率が高い可能性のあるファイルのみを圧縮します：<br>
 応答本文のMIMEタイプはテキストです；
ファイルサイズは{ITEM=ServTuning_Help#gzipMinFileSize}から{ITEM=ServTuning_Help#gzipMaxFileSize}の間です。
</li>

<li>Webサーバーは、動的に生成されたコンテンツに対しても実行時圧縮を実行できます。<br>

動的コンテンツの圧縮を有効にするには、{ITEM=ServTuning_Help#enableDynGzipCompress}と{ITEM=ServTuning_Help#enableGzipCompress}を{val}はい{/}に設定する必要があります。
</li>

<li>{ITEM=ServTuning_Help#gzipStaticCompressLevel}と{ITEM=ServTuning_Help#gzipCompressLevel}の範囲は次のとおりです。
{val}1{/}（より速い圧縮）から{val}9{/}（より良い圧縮）。
メモリやCPUサイクルなどの利用可能なハードウェアリソースに基づいてチューニングする必要があります。
</li>
</ul>
END_A

SEE_ALSO: 

[END_QA]



[QA]
ID: qa_perf
Q: どのようにWebサーバーのパフォーマンスを測定するには？

A: まず、Webサーバーが最大のパフォーマンスを発揮できるようにチューニングされていることを確認します。
<ul>
   <li>{ITEM=ServSecurity_Help#outBandwidth}を{val}0{/}に設定してスロットルをオフにします。</li>
   <li>{ITEM=ServTuning_Help#maxKeepAliveReq}の値を{val}100000{/}のような大きな数値に設定します。</li>
   <li>{ITEM=ServTuning_Help#maxConnections}を可能な限り高く設定してください。</li>
   <li>1つのIPアドレスから必要な並行接続の数に応じて、{TBL=ServSecurity_Help#perClientConnLimit}の{ITEM=ServSecurity_Help#softLimit}と{ITEM=ServSecurity_Help#hardLimit}を{val}1000{/}以上に設定します。</li>
   <li>テストバーチャルホストの{ITEM=VirtualHosts_Help#allowSymbolLink}を{val}はい{/}に、{ITEM=VirtualHosts_Help#restricted}を{val}いいえ{/}に設定します</li>
</ul>

ベンチマークにはApacheBench、Httperf、AutoBenchの3つのツールがあります。
<ul>
  <li><strong>ApacheBenchを使う：</strong></li>
  	ApacheBenchは、Apache httpdにバンドルされているコマンドラインのパフォーマンステストツールです。
    これは、数百のHTTP / 1.0クライアントを同時にシミュレートして、サーバー上の同じリソースにアクセスすることができます。<br>
  	
	次のコマンドで簡単に実行できます：<br>
	
	{cmd}ab -n 10000 -c 100 http://localhost:8088/index.html{/}<br>

	キープアライブ要求を使用することができます<br>

	{cmd}ab -n 10000 -c 100 -k http://localhost:8088/index.html{/}<br>

	詳細については、Apacheのドキュメントを参照してください。<br><br>
	
   <li><strong>Httperfを使う：</strong></li>
   	httperfは、<a href="http://www.hpl.hp.com/personal/David_Mosberger/httperf.html"> http://www.hpl.hp.com/personal/David_Mosberger/httperf.html</a>から入手できます。<br>
   	
	HttperfはデフォルトでHTTP / 1.1プロトコルを使用し、常にキープアライブ要求を使用します。
    より多くのコマンドオプションがあります。詳しくは、そのドキュメントを参照してください。<br>
	
	次に例を示します:<br>
	
	{cmd}./httperf --server localhost --port 8088 --uri /index.html --rate 1000 --num-conn 100 --num-call 100 --timeout 50{/}<br><br>

   <li><strong>Autobenchを使う:</strong></li>
   	Autobenchは、Webサーバーのベンチマークプロセスを自動化する、httperfを呼び出す単純なPerlスクリプトです。<br>

	オートベンチは<a href="http://www.xenoclast.org/autobench/"> http://www.xenoclast.org/autobench/</a>から入手できます。詳細は、そのドキュメントを参照してください。 <br>
</ul>

サーバーとテストツールを同じマシン上で実行することはお勧めしません。実際の使用状況を反映していないからです。
また、テストツールはWebサーバーと同じCPUを共有しますので、そうした場合は考慮する必要があります。

2台以上のコンピュータを使用してLAN経由でテストを実行する方が良いです。
Webサーバーの実際のパフォーマンスを明らかにするには、ネットワークとクライアントマシンがボトルネックにならないようにする必要があります。
Gigabits LANまたは複数のスイッチ100Mb接続でテストを実行することを推奨します。
1台のマシンのみを使用してクライアントをシミュレートする場合は、サーバーマシンと同等かそれ以上のパワーを持つことを確認してください。

小さなファイルでテストを開始し、ネットワーク帯域幅が飽和するまで徐々にファイルサイズを増やします。
END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_extapp
Q: 外部アプリケーション（Fast CGI、LSAPI アプリ、Webサーバー、またはサーブレットエンジン）を設定する方法は？

A: すべてのタイプの外部アプリケーションは、サーバーレベルまたはバーチャルホストレベルのいずれかで設定できます。
サーバーレベルのものはすべてのバーチャルホストで使用できます。<br>

<ul>
<li>
同じマシン上で実行されているFast CGIおよびLSAPIアプリケーションは、オンデマンドでWebサーバーによって開始できます。
このタイプのアプリケーションをローカル外部アプリケーションと呼びます。
Webサーバーによって開始されないアプリケーションは、同じマシン上で実行されている場合でも、リモート外部アプリケーションと呼ばれます。<br> 

Servlet Engineは、同じマシン上で実行されているかどうかに関係なく、手動で起動する必要があります。<br>
</li><br>
<li>

最初に外部アプリケーションを構成する必要があります。その後、他の場所でその名前で参照することができます。
{PAGE=ExtApp_Help}タブの下に、サーバーまたはバーチャルホストレベルで構成されます。<br> 

すべての外部アプリケーションについて、{ITEM=ExtApp_Help#extAppName}、{ITEM=ExtApp_Help#extAppAddress}、および{ITEM=ExtApp_Help#maxConns}を指定する必要があります。<br>

{ITEM=ExtApp_Help#extAppName}は、このアプリケーションを内部的に参照するために使用されます。
{ITEM=ExtApp_Help#extAppAddress}は、Webサーバーが接続する必要のあるアプリケーションによって使用されるソケットアドレスです。
{ITEM=ExtApp_Help#maxConns}は、外部アプリケーションがとる最大同時接続数を示します。

For a local external application, you also need to specify 
{ITEM=ExtApp_Help#extAppPath}, 
{ITEM=ExtApp_Help#backlog},
{ITEM=ExtApp_Help#instances}
and {ITEM=ExtApp_Help#env} (optional). <br>

{ITEM=ExtApp_Help#extAppPath}は、アプリケーションを起動するコマンドです。オプションのコマンド・パラメーターを指定することができます。
{ITEM=ExtApp_Help#backlog}は、リッスンするサーバーソケットのキューサイズです。
{ITEM=ExtApp_Help#instances}は、サーバーが生成するコピー（インスタンス）の数です。
{ITEM=ExtApp_Help#env}は、外部アプリケーションの追加の環境変数を指定します。<br>

</li>
<br>
<li>
マルチスレッド外部アプリケーションは、1つのプロセス内で複数の要求を同時に処理できます。
したがって、その種の外部アプリケーション用に複数のインスタンスを作成する必要はありません。
ただし、ほとんどの外部アプリケーションはマルチスレッドではなく、各プロセスは同時に1つの要求しか処理できません。
この場合、並行処理のレベルを上げるために、複数のインスタンスを作成する必要があります。<br>

{ITEM=ExtApp_Help#instances}は、Webサーバーが生成できるインスタンス（プロセス）の数を制御できます。
また、{ITEM=ExtApp_Help#maxConns}は、{ITEM=ExtApp_Help#instances}と一致するように設定する必要があります。 <br>

いくつかのシングルスレッドFast CGIプロセス自体は、子プロセスをフォークして、PHP Fast CGIの実装など、複数の要求を同時に処理できます。
そのタイプのFast CGIの場合、{ITEM=ExtApp_Help#instances}を{val}1{/}に設定し、Fast CGIの設定を使用して子プロセスをいくつ作成するかを制御します。
たとえば、PHPではこの目的で特別な{ITEM=ExtApp_Help#env}変数{val}PHP_FCGI_CHILDREN{/}を使用します。<br>
</li>
<br>
<li>
外部アプリケーションは直接使用することはできません。 {PAGE=ScriptHandler_Help}または{PAGE=Context_Help}ハンドラのいずれかに設定する必要があります。
スクリプトハンドラとして設定すると、Webサーバは、要求が{ITEM=ScriptHandler_Help#suffix}に一致する静的ファイルを参照する場合、要求をそのハンドラに転送します。
コンテキストハンドラとして設定すると、WebサーバはリクエストのURLがContext {ITEM=Context_Help#expuri}と一致する限りリクエストをリクエストに転送します。
</li>
</ul>
END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_php
Q: PHPサポートを設定するには？

A: PHPはLiteSpeed Webサーバーで完全にサポートされているため、追加の設定は必要ありません。
通常、デフォルト設定を変更する必要はありません。
LiteSpeedでは、2種類のPHP SAPIインタフェースがサポートされています:<br>
<ul>
	<li>LiteSpeed</li>
    <li>FastCGI</li>
</ul>

<p>LiteSpeed SAPIは、当社のLSAPIプロトコルに基づいてLiteSpeed Web Serverと通信する新しいPHP SAPIモジュールです。
LiteSpeed SAPIは、FastCGI SAPIと似たアーキテクチャを2つの主要な拡張機能を備えています:
<ol>
<li>50％向上したパフォーマンス</li>
<li>Webサーバーの設定と.htaccessファイルを使用した動的なPHP設定の変更をサポートしています。</li>
</ol>
</p>

<p> 
Unlike Apache's mod_php that
embeds PHP engine inside web server processes, LiteSpeed 
web server talks to standalone PHP Engine processes via Fast CGI or LSAPI
protocol. A pre-built PHP executable with minimum features configured
is installed to {cmd}[lsws_home]/fcgi-bin/php{/}. 
If additional features are required, you should replace it with your own
customized PHP executable.</p>

<p>PHP support is configured in two steps: 1. adding an
  	external PHP application; 2. adding a script
  	handler using the PHP application just defined in step 1.</p>

<p>PHP application can be defined at server level or virtual host
  	level, application defined at server level is
  	available to all virtual hosts. 
	PHP engine can run on localhost or on a remote machine. When running
  	on local machine, PHP processes can be started by third party
  	FastCGI/LSAPI manager or by the web server itself, the latter
  	is preferred.</p>

<p>Before adding/changing PHP application configuration, you need to
  	know which PHP SAPI is built into the PHP binary.  
  	Command: {cmd}[lsws_home]/fcgi-bin/php -v{/} will display the 
	information. For LiteSpeed SAPI, you should define a LSAPI
  	application, for CGI/FCGI SAPI, you should define a FastCGI application.
	</p>


<p>After a PHP application is configured, a {PAGE=ScriptHandler_Help}
	needs to be configured in order to have PHP script handled by the PHP
	application. The default {ITEM=ScriptHandler_Help#suffix} 
	for PHP script is set to {val}php{/};  
	{ITEM=ScriptHandler_Help#shType} is set to either {val}Fast CGI{/}
	or {val}LiteSpeed API{/}; {ITEM=ScriptHandler_Help#shHandlerName}
	is set to the name of the PHP application. You can specify
	multiple suffixes in a comma-separated list like
	{val}php,php4,phtml{/}. {PAGE=ScriptHandler_Help} can be set at
	server level or virtual host level. Virtual host level setting
	overrides the server level setting for the same suffix. </p> 

<p>There are a few environment variables can be used to customize PHP
via LSAPI, for detail information please refer to the README file in 
php/sapi/litespeed directory. </p>

<p>There are several environment variables can
  	be used to customize the PHP FCGI application: </p>
<ul>
	<li>{val}PHP_FCGI_CHILDREN=XX{/}</li>
	<p>This controls how many child processes the PHP engine process spawns. 
	You can use {ITEM=ExtApp_Help#instances} or this environment 
	variable to control the concurrency of PHP engine. 
	{ITEM=ExtApp_Help#maxConns} setting should be set 
	to the same value as the number of children processes.</p>
		
	<li>{val}PHP_FCGI_MAX_REQUESTS=XXXX{/}</li>
	<p>This controls how many requests each child process will handle
	before exit. It protects against memory leak inside PHP. Web
	server needs to reestablish a connection with a new child
	process. So set it as high as possible to increase the performance.</p>
		
	<li>{val}FCGI_WEB_SERVER_ADDRS=127.0.0.1,192.168.0.1{/}</li>
	<p>This controls who can connect to the PHP engine over the
	network when TCP socket is used. Only 127.0.0.1 and 192.168.0.1 is
	allowed in the above example. This option is not necessary when
	PHP engine run on localhost with proper
	{ITEM=ExtApp_Help#extAppAddress} setting. Both Unix domain socket
	and TCP socket can be used when running on localhost, Unix domain
	socket is preferred for better performance. If TCP socket has to
	be used, then let PHP only listen on the local loopback interface
	by setting {ITEM=ExtApp_Help#extAppAddress} to
	{val}localhost:XXXX{/}. </p> 
</ul>
	
END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_phplsapi
Q: LiteSpeed SAPIでPHPバイナリを構築するには？

A: 通常、ビルドされたバイナリに組み込まれていないPHPモジュールが必要な場合を除き、独自のPHPバイナリをビルドする必要はありません。<br>
<p>First, you need to download the latest PHP source code. If
  php/sapi/litespeed/ directory does not exist in the expanded source
  code tree, you need to download our patch available at 
 <a href="http://www.litespeedtech.com/lsapi/">http://www.litespeedtech.com/lsapi/</a>
  </p>
<p>Then, configure PHP with {cmd}--with-litespeed{/} plus other
  options you will need. Fast CGI related options
  {cmd}--enable-fastcgi--enable-discard-path --disable-path-info-check
  {/} should not be used together with {cmd}--with-litespeed{/}. </p>
<p>Build PHP binary with {cmd}make{/}, you should find an executable
  called "php" under sapi/litespeed/ directory after the compilation
  succeeds. Then copy the new binary with command 
  {cmd}cp php/sapi/litespeed/php lsws/fcgi-bin/lsphp{/}. We recommend renaming
  php to lsphp in order to distinguish it from FastCGI version of PHP
  binary.</p> 

<p>There are two environment variables that can be tweaked to control
the behavior of LiteSpeed PHP. </p> 
<ul>
<li>PHP_LSAPI_CHILDREN  (no default)</li>

<p>In order to handle multiple requests concurrently, LiteSpeed web
server can either spawn multiple PHP processes; or spawn one process,
and this process will create a number of child processes to handle
multiple requests simultaneously. 

The web server will create PHP processes specified by
{ITEM=ExtApp_Help#instances} in LSAPI application
configuration. For one PHP process launched by the server, if
PHP_LSAPI_CHILDREN is not set, it will not create any child process;
if PHP_LSAPI_CHILDREN is set, it will spawn a number of child
processes specified by PHP_LSAPI_CHILDREN. Usually, it should match
{ITEM=ExtApp_Help#maxConns} configured for the LSAPI
application, and both values should not be set over 100 in most
cases.</p><br> 

<li>PHP_LSAPI_MAX_REQUESTS (default value: 500)</li>

<p>This controls how many requests each child process will handle
before exit. When one process exits, another will be created. This
tuning is necessary because several PHP functions have been identified
having memory leaks. If the PHP processes were left around forever,
they could become very inefficient.</p>
</ul>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_phpfcgi
Q: FCGI SAPIでPHPバイナリを構築するには？

A: あらかじめ構築されたバイナリにある特定のPHPモジュールが必要な場合を除き、通常はPHPバイナリをビルドする必要はありません。<br>

  If you need to build your own PHP binary, see the following
  steps:<br><br>

	download the latest PHP distribution package; <br>

  	For PHP 4.3.4 and later releases, a small change should be made in source code {cmd}sapi/cgi/cgi_main.c{/}
  		around line 858 and 862. <br>
  <pre class="eg">
	if (env_path_info) {
		SG(request_info).request_uri = env_path_info;
	} else {
		SG(request_info).request_uri = env_script_name;
	} </pre>

Should be commented out and replaced with the code in the else clause and look like:
  <pre class="eg">
        SG(request_info).request_uri = env_script_name; </pre>

  Then configure php with
  {cmd}--enable-fastcgi--enable-discard-path --disable-path-info-check {/} 
  along with other options you need. Please disregard the statements
  about {cmd}--enable-discard-path 
  --disable-path-info-check{/} options in PHP documentation and
  README.FastCGI, as they are only applicable to Apache.<br><br>
  After PHP is successfully built, replace the stock PHP binary coming
  with the package by command:<br>
  {cmd}cp -f sapi/cgi/php [lsws_home]/fcgi-bin/php . {/}<br>
  The pre-built PHP
  executable is also configured with option
  {cmd}--with-config-file-path=../conf{/}, in this way different
  php.ini can be used for different PHP engine. It is just a
  recommendation. The default  php.ini is located at 
  {cmd}[lsws_home]/conf/php.ini{/}.   
  </p>


END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_phpacc
Q: PHPアクセラレータを設定するには？

A: 「PHPアクセラレータ」、「Turck MMCache」、「代替PHPキャッシュ（APC）」は、LiteSpeedでテストされ、うまく機能しています。
「Zendアクセラレータ」はうまく動作するはずです。
すべてのアクセラレータについて、PHP設定ファイル - php.iniを変更する必要があります。
あらかじめ構築されたPHPエンジンのデフォルトのphp.iniは、[lsws_home]/conf/php.iniにあります。<br> 
Litespeedインストーラは、事前に構築されたバイナリで "Turck MMCache"または "APC"を有効にすることができます。
インストール後に有効化、無効化、または切り替えを行う場合は、[lsws_home]/admin/misc/enable_phpa.shを実行してください。<br> 
PHPアクセラレータのインストール方法の詳細については、それぞれのベンダのマニュアルを参照してください。
END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_suexec
Q: suEXECモードでCGI、FCGI、LSAPI、PHPを起動する方法は？

A: When a script is started in "suEXEC" mode, the script can run on
behalf of a user other than the user that web server process running
as, this is an important security feature in shared hosting
environment which minimize possible damage of a vulnerable script to
whom this script belongs to.<br>
It is very easy to turn on "suEXEC" in LiteSpeed Web Server, what you
need to do is to set "CGI set UID mode" to "DocRoot UID" when you
create a virtual host, then change the owner of the document root
directory to target user. <br>
For traditional CGI script, you can also use "CGI File UID", but
"DocRoot UID" is recommended as it works with all scripts unless the
user ID of the CGI script is different from document root user ID.
END_A

SEE_ALSO:
[END_QA]



[QA]
ID: qa_sproxy
Q: LiteSpeed Web Serverをリバースプロキシサーバーとして設定する方法は？

A: LiteSpeed Web Serverは、HTTPプロトコルをサポートするWebサーバーまたはアプリケーションサーバーの前で実行されるトランスペアレントリバースプロキシサーバーとして使用でき、システム全体のスケーラビリティ、パフォーマンス、およびセキュリティを向上させることができます。<br>
次の手順に従ってWebAdminコンソールに設定してください：<br>

<ol>
	<li> Define an {PAGE=ExtApp_Help} with 
		 {ITEM=ExtApp_Help#extAppType} {val}Web Server{/}.
		 Set {ITEM=ExtApp_Help#extAppAddress} to the IP address 
		 and port used by the backend web server.
	</li> 

	<li>Two choices:<br>
	<ul>
		<li>Define a {TBL=Context_Help#proxyContext} with 
			{ITEM=Context_Help#proxyWebServer} set to the
			{PAGE=ExtApp_Help} just defined.</li>

		<li>Define a {PAGE=ScriptHandler_Help} with 
			{ITEM=ScriptHandler_Help#shType} {val}Web Server{/},
			and {ITEM=ScriptHandler_Help#shHandlerName} set to the
			{PAGE=ExtApp_Help} just defined.</li>
	</ul>
</li>
</ol>

	For example, you may want to have Apache with mod_perl to handle
	Perl scripts instead of running them as CGI, assuming Apache
	is running on the same server machine on port 8080, pointing to
	the same {ITEM=VHGeneral_Help#docRoot}. </br>

	First, define an {PAGE=ExtApp_Help}, set 
	{ITEM=ExtApp_Help#extAppType} to {val}Web Server{/},
	{ITEM=ExtApp_Help#extAppName} to {val}ApachePerl{/} and 
	{ITEM=ExtApp_Help#extAppAddress} to {val}localhost:8080{/}.<br> 
	Then define a {PAGE=ScriptHandler_Help}, set 
	{ITEM=ScriptHandler_Help#suffix} to {val}pl{/},
	{ITEM=ScriptHandler_Help#shType} to {val}Web Server{/} and
	{ITEM=ScriptHandler_Help#shHandlerName} to {val}ApachePerl{/}.


END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_jsp
Q: サーブレット/ JSPを設定するには？

A: LiteSpeed Webサーバーは、AJPv13プロトコルを使用してServlet/JSPをサポートしています。
AJPv13と互換性がある限り、サーブレットエンジンを選択することができます。
設定には次のガイドラインを使用してください：

<ol>
	<li> Install an AJPv13 compatible Servlet engine.</li><br>
	
	Tomcat 3.x, 4.x and Jetty 4.x support AJPv13 protocol. The AJPv13
	compatible connector of the Servlet engine must be enabled. Please
	refer to respective documents coming with the Servlet engine. Make
	sure the Servlet engine works properly through their build-in Http
	Server.<br><br>  
	
	<li>Make the web application files available to web server.</li><br>
	
	If the Servlet engine runs on a different machine, make a local
	copy of the web application files. Skip this step if the Servlet
	engine runs on the same machine. Only the specific web application
	directory is needed, not the whole web-apps/ directory.<br> 
	
	If the web application is packed in a war file, you need to expand it. 
	The WEB-INF/web.xml must exist along with the static files and JSP
	files. The Java class files under WEB-INF/ can be removed.<br><br>
	
	<li>Configure the Servlet engine using web administration
	console.</li><br> 
	
	Under the {PAGE=ExtApp_Help} tab at server level or virtual host
	level add a Servlet engine. Make sure the
	{ITEM=ExtApp_Help#extAppAddress} matches the AJP setting in
	Servlet engine.<br><br> 
	
	<li>Create a {TBL=Context_Help#javaWebAppContext} under 
	{PAGE=Context_Help} tab of the virtual host.</li><br>
	
	The Context {ITEM=Context_Help#expuri} should match the URI used
	by the Servlet engine. 
	Set {ITEM=Context_Help#javaWebApp_location} to the directory of
	web application. Select the {ITEM=Context_Help#servletEngine}
	just created.<br><br>
	
	<li> Set {PAGE=ScriptHandler_Help} for JSP.</li><br>

	Add a {PAGE=ScriptHandler_Help} for 
	{ITEM=ScriptHandler_Help#suffix} {val}jsp{/} for the virtual
	host. Set {ITEM=ScriptHandler_Help#shType} to {val}Servlet
	Engine{/} and set the {ITEM=ScriptHandler_Help#shHandlerName} 
	to the Servlet engine just created.
	
</ol>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_mapache
Q: Apacheから移行するには？

A: あなたのWebサイトは、LiteSpeed Webサーバで現在入手できないApacheモジュールに依存していないため、移行は簡単です。<br>

<ol>
<li>
It is recommended to run LiteSpeed web server parallel to Apache
first. 
</li>

<li>
Change the user and group to the same setting as Apache by running {cmd}install.sh{/} if the 
server is started by root. 
</li>

<li>
<B>Attention: Since 2.2 release, LSWS can use Apache httpd.conf
directly without duplicating vhost configuration in LSWS, you should
try that first, for more information, please checkout our Wiki
pages.</b><br>
Create a virtual host and configure it to the same settings:<br>
<ul>
	<li>Set the {ITEM=VHGeneral_Help#docRoot} to the same directory used by Apache 
	(be careful about the permission);</li>

	<li>Add {TBL=Context_Help#cgiContext} if CGI is used in
	Apache;</li>

	<li>Set up PHP or Servlet engine in {PAGE=ExtApp_Help} if needed. </li>
	<li>Create {TBL=Context_Help#generalContext} to match the "Alias"
	in Apache.</li>
</ul>
</li>

<li>
Restart web server and test the setup by sending same requests to both servers. 
After verifying that LiteSpeed web server is working properly, you can stop Apache 
and change the listener setting to use the TCP port that Apache used.
</li>
</ol>
END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_prvtkey
Q: SSL秘密鍵の生成方法

A: <a href="http://www.openssl.org/">OpenSSL tool kit</a>で秘密鍵を生成する必要があります。

<ol>
	<li>Install OpenSSL if it is not installed already.</li>
	<li>Create RSA private key for your web server by using command<br>
	
	{cmd}openssl genrsa -out server.key 1024{/}<br>
	
	You can create a Triple-DES encrypted private key file by using<br>
	{cmd}openssl genrsa -des3 -out server.skey 1024{/}
	</li>
	<br>
	You need to give a password (pass-phase) for the private key file. 
	You will be prompt for the password when the private key file is used every time.<br>

	LiteSpeed web server only support private key files without encryption. 
	You probably think it is not safe for the private key. Well, in theory, it is not 
	as safe as the encrypt version. But in reality, it is impossible to let user input 
	password for the SSL keys whenever the server starts or restarts. Some web server can 
	save the password somehow and automate the pass-phase when the server starts, 
	but it is only as good as the machine is not compromised unless your password is 
	hardware protected. The private key file along with the certificate file should be placed 
	in a directory that is only readable by whom the server running as.
	
	<li>If you generated the encrypted key file, the pass-phase can be removed with 
	the following command:<br>
	
	{cmd}openssl rsa -in server.skey -out server.key{/}
	</li>
</ol>

1024 in above commands is the length of the private key in bits. The bigger private key 
is more secure. You can create bigger private key like 2048 bit. However, if you plan to get 
your certificate from certificate issuer, you may have to use 1024 bit private key as it is 
the biggest key they can process, check with the issuer first.

For more information about creating SSL private key please visit 
<a href="http://www.openssl.org/docs/HOWTO/keys.txt">http://www.openssl.org/docs/HOWTO/keys.txt</a>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_selfcert
Q: 自己署名証明書を作成するには？

A: 自己管理証明書を使用してWeb管理コンソールを保護することができます。
パブリックWebサイトには推奨されません。

自己署名証明書を使用すると、ブラウザーは、自己署名証明書がブラウザーによって信頼されていないため、証明書を受け入れるかどうかをユーザーに尋ねます。

<ol>
	<li> Create your private key.</li>
	<li> Create the self-signed certificate with the command,<br>
	{cmd}openssl req -new -x509 -key server.key -out server.crt -days 365{/}<br>
	
	You will be asked for more information about your organization and web site. 
	Please give correct information. You should give valid domain names of your web site 
	when you are asked for Common Name but not any aliases. To determine the valid domain 
	name, you can use commands such as {cmd}nslookup{/}, {cmd}dig{/} or {cmd}host{/}. 
	For example, if the web site can be accessed via both 
	http://foo.bar and http://www.foo.bar, usually foo.bar is the valid domain name 
	(canonical name), www.foo.bar is an alias; foo.bar should be used for the Common Name.
	</li>
</ol>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_cert
Q: How to get a SSL certificate from certificate issuers?

A: You need to generate a certificate request from your private key and send the request 
to a certificate issuer, like VeriSign or Thawte. The certificate issuer will sign the 
request and send back the certificate. To generate a certificate request:

<ol>
	<li>Create your private key.</li>
	<li> Create the certificate request with command,<br>
	
	{cmd}openssl req -new -key server.key -out server.csr{/}<br>
	
	You will be asked for more information about your organization and web site. 
	Please give correct information. You should give valid domain names of your web site 
	when you are asked for Common Name but not any aliases. To determine the valid domain 
	name, you can use commands such as {cmd}nslookup{/}, {cmd}dig{/} or {cmd}host{/}. 
	For example, if the web site can be accessed via both 
	http://foo.bar and http://www.foo.bar, usually foo.bar is the valid domain name 
	(canonical name), www.foo.bar is an alias; foo.bar should be used for the Common Name.

	</li>
</ol>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_confssl
Q: How to configure SSL using the private key and certificate in LiteSpeed web server?

A: After you get your certificate, you can configure 
   {TBL=Listeners_Help#sslSetting} for your web server.

<ol>
   <li> Create a listener with {ITEM=Listeners_Help#listenerSecure}
		set to {val}Yes{/}. The official port for SSL is 443, 
		but other port can be used too.</li>

   <li> Click on the newly created listener, then go to the 
		{TBL=Listeners_Help#sslSetting}. Then edit the
		{ITEM=Listeners_Help#keyFile} and  
		{ITEM=Listeners_Help#certFile}. <br>
      
	  	Give the path of the SSL private key file and certificate file in the 
		pop-up window. Click "Finish" button to save your changes.
   </li>

   <li> You can specify {ITEM=Listeners_Help#sslVersion} 
		and {ITEM=Listeners_Help#sslEncryptionLevel}  on the same page.
   </li>

   <li> Set {TBL=Listeners_Help#virtualHostMapping} in listener
   	General tab. In the pop-up window, select the 
	{ITEM=Listeners_Help#virtualHostName} that you 
   	want to access through this listener and 
	input the valid {ITEM=Listeners_Help#domainName}
   </li>
   
   <li> Click "Apply Changes" link below the banner. If the new listener 
   uses {ITEM=Listeners_Help#listenerPort} number less than
   {val}1024{/} click {ITEM=ServerStat_Help#restart} in {ITEM=ServerStat_Help#servAction}, 
   otherwise just click {ITEM=ServerStat_Help#reload}.
   </li>
   
   <li> Test your SSL configuration with your browser by accessing 
   https://your.domain:your_port/. The "s" after "http" at the beginning of the address 
   indicates the browser to use SSL protocol.
   </li>
   
   If you use a self-signed certificate, the browser will prompt you to accept 
   the certificate. Otherwise the browser will accept the certificate automatically 
   without bothering you.

</ol>

Now you should be able to see your web pages loaded through the secured SSL connection.

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_frontpage
Q: How to install Microsoft FrontPage Server Extension 2002 with LiteSpeed web server?

A: Please follow the following steps:
<ol>
   <li> Download the corresponding Microsoft FrontPage Server
   Extension for your platform from 
   <a href="http://www.rtr.com/fpsupport/fp2002sr1_download.htm">rtr.com</a>, 
   save it to directory lsws/add-ons/frontpage/.</li>

   <li> run FrontPage installation script as root user:<br>
		{cmd}lsws/admin/misc/fp_install.sh <path_to_frontpage_package>{/}
		</li>

   <li> Restart LSWS with root user account. </li>
</ol>
Now you can enable FrontPage extension for your web site. The most
important configuration is the {val}Domain Names{/}, it must match
the domain name part of the URL that you used to access the web page,
and otherwise it will not work. Port number should be specified, example:
{val}your.domain.name:80{/} <br>
If you enable FrontPage Server Extension for one virtual host from
LiteSpeed web admin console, LiteSpeed Web Server will try to
install it to the document root of that virtual host when restart web
server. If it is successful, you can access admin page
of that virtual host from: <br>
	{cmd}http://your.doamin.name/_vti_bin/_vti_adm/fpadmcgi.exe{/}<br>
The default login username is "admin" and password is "fp123456". You should
change the password immediately after the extension is enabled.<br>
<br>
If you changed {val}Domain Names{/} setting, you need to reinstall
FrontPage extension. What you need to do is just remove all "_vti_..."
files under the document root of your web site, then restart web server.

If you want to setup Admin Page for all virtual hosts, run the
following command at command line as root user:<br>
{cmd}/usr/local/frontpage/version5.0/bin/owsadm.exe -o setadminport -p
&lt;PORT&gt; -s &lt;path_to_/lsws/add-ons/frontage/conf/httpd.conf&gt; -username
&lt;USERNAME&gt; -pw &lt;PASSWD&gt;{/}<br>

Then add a virtual host with {ITEM=VHGeneral_Help#docRoot} pointing to
{val}/usr/local/frontpage/version5.0/admin-exes/{/} from the web admin
console. Now you can manage FrontPage Server Extension for all 
virtual hosts from this virtual host.<br>


END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_autoindex
Q: How to customize auto index script?

A: LiteSpeed web server uses an external script to generate the 
index page for a directory with no index file on the fly. The URI to the auto
index script is configurable by field {ITEM=VHGeneral_Help#autoIndexURI} at virtual host level
under general tab. Whenever a directory
with no index file is accessed, LiteSpeed Web server will perform an
internal redirect to that URI. <br>
In order to share the script among all virtual hosts, a
{TBL=Context_Help#generalContext} with {ITEM=Context_Help#expuri}
{val}/_autoindex/{/} and {ITEM=Context_Help#location}
{val}$SERVER_ROOT/share/autoindex/{/} 
is automatically created for every virtual host. <br>

A default php script is provided with same Look and Feel as
Apache's mod_autoindex. The script is located at <br>
	   {cmd}lsws/share/autoindex/default.php{/}<br>
Permission is granted to copy and change the default auto index
script. It is recommended to make changes on a copy of the default
script, the default script will be overwritten during next upgrade. 
When you write your own script, just remember that the path to
the directory to be indexed is passed to the script in a CGI
environment variable: {cmd}"LS_AI_PATH"{/}. The script can be placed at
anywhere you like, but if you want to share it among all virtual
hosts, just place it under {cmd}lsws/share/autoindex/{/}
directory. <br>

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_awstats
Q: AWStatsをLiteSpeed Web Serverで併用するには？

A: AWStats can be used as an add-on module of LiteSpeed web server.
It has been seamlessly integrated into our web administration
console, and the configuration and statistical updates has been automated as well. <br>
To install AWStats as an add-on module, please run script: <br>
   {cmd}lsws/admin/misc/awstats_install.sh{/} <br>
This script will try to download the latest AWStats package from <a href=http://www.awstats.org>www.awstats.org</a>, expand it
under {cmd}lsws/add-ons/{/} directory and create a symbolic link
from "./awstats-x.x" to "awstats". If it fails to download for any reason, you can manually do this step as well.<br>
<br>
Next step is to enable AWStats add-on module for the virtual host that
you would have AWStats analyze its access log.<br>
From the Web Admin console, just select the virtual host on left, click "Add-on" tab on the right, then fill in configurations in "AWStats Integration" table. Configurations are<br>
<ul>
	<li>{ITEM=VHAddOns_Help#updateMode}: Disabled, Static or Dynamic.</li>
	<li>{ITEM=VHAddOns_Help#workingDir}: The directory to be used to save
	AWStats configuration and statistical results.</li>
	<li>{ITEM=VHAddOns_Help#awstatsURI}: Where the statistical results can be accessed.</li>
	<li>{ITEM=VHAddOns_Help#siteDomain}: The main domain name of the virtual host.</li>
	<li>{ITEM=VHAddOns_Help#siteAliases}: All possible add-on domains, aliases and IP
	addresses.</li>
	<li>{ITEM=VHAddOns_Help#updateInterval}: Hourly or Daily.</li>
	<li>{ITEM=VHAddOns_Help#updateOffset}: When to start the update.</li>
	<li>{ITEM=VHAddOns_Help#securedConn}: the result is access via HTTP or
	HTTPS.</li>
	<li>{ITEM=VHAddOns_Help#awstatsRealm}: To protect the result with authentication.</li>
</ul>

After applying the configuration changes, you can access the statistical
results produced by AWStats by clicking "statistics" action link for
that virtual host under "Server Manager" page.<br>
<br>
Customize AWStats configuration file:<br>
<br>
AWStats configuration file is generated automatically based on a
model configuration file <working directory>/conf/awstats.model.conf,
which is copied from
lsws/add-ons/awstats/wwwroot/cgi-bin/awstats.model.conf. The following
configuration parameters are populated by LiteSpeed: "LogFile",
"LogType", "LogFormat", "SiteDomain", "HostAliases", "DirData",
"DirConfig" and "DirIcons". Other parameters can be customized by
changing awstats.model.conf.
<br>NOTE: Never edit the destination configuration
file as it is always overwritten by LiteSpeed before invoking AWStats updates.

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_perld
Q: 永続的なPerl CGIデーモンを使用するには？

A: Perl CGIデーモンの設定はPHPの設定と似ています。
Fast CGIアプリケーションとして設定し、Perlスクリプトに使用される "pl"やその他のサフィックスのスクリプトハンドラを追加する必要があります。
Perl CGIデーモンはlsws/fcgi-bin/lsperld.fplにあります。<br>
"lsperld.fpl"はFast CGIインターフェイスを利用するため、まずPerl Fast CGIモジュールFCGI.pmをインストールする必要があります。
<a href="http://www.fastcgi.com">http://www.fastcgi.com</a>またはCPANから入手できます。<br>
CPAN経由でFCGI.pmをインストールするには、次のコマンドを使用できます：
{cmd} perl -MCPAN -e 'install FCGI' {/} <br>
永続プロセスのメモリ使用量を増加させるために、Perlデーモンが処理できる要求の数は環境変数
{val}FCGI_PERL_MAX_REQ{/}によって制御されます。デフォルトは500です。<br>
例: {val}FCGI_PERL_MAX_REQ=1000{/}.

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_apimport
Q: Apacheの設定をインポートするには？

A: Apache構成移行ツール - {cmd}lsws/admin/misc/apimport.sh{/}は、既存のApache構成を移行するのに役立ちます。
インストール時にApacheの設定をインポートしなかった場合は、コマンドラインから次のマイグレーションツールを実行してください：<br>
<br>
<br>
	{cmd}lsws/admin/misc/apimport.sh /etc/httpd/conf/httpd.conf{/}<br>
<br>
次に、Web管理コンソールにログインし、設定を確認して微調整してから、LiteSpeed Web Serverを再起動します。
プロダクションWebサイトでは、インポートされたWebサイトを別のポートでテストすること（インポートされたバーチャルホストを他のリスナーにバインドすること）を推奨します。

END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_pipedlogger
Q: パイプロガーを使用するには？

A: A パイプロガーは、WebサーバーがSTDINストリーム上のパイプを通じて送信したアクセスログデータを受信するスタンドアロンアプリケーションです。
これにより、データベースへのログインなど、柔軟なロギングが可能になります。
Perlで書かれたシンプルなパイプロガーがあります：<br>
<pre>

#!/usr/bin/perl
open LOG, '>> ../logs/pipedaccess.log';
select LOG;
$| = 1;
while (<>)
{
  print LOG $_;
}

</pre>
STDINからデータを受け取り、pipedaccess.logファイルに追加します。

パイプロガーを使用するには、まず「Piped Logger」タイプの外部アプリケーションを定義し、「Access Log」設定に行き、ドロップダウンリストから「Piped logger」を選択する必要があります。
パイプロガーが設定されると、アクセスログファイルにロガーが書き込まれません。


END_A

SEE_ALSO: 
[END_QA]



[QA]
ID: qa_template
Q: 類似の設定でバーチャルホストのグループを設定するにはテンプレートを使用するには？

A: 1つのサーバーで複数のWebサイトをホストする場合、それらのほとんどが同様の構成を持つことがあります。
新しいバーチャルホストを追加するには、既存の設定を複製してから、少し変更を加えるだけです。
また、共通の構成を1つ変更する必要がある場合は、すべての構成ファイルを1つずつ編集する必要があります。
それは迷惑でエラーを起こしやすい。
LiteSpeedはこの優れた機能を提供します。バーチャルホストテンプレートは、上記の状況でウェブマスターの負担を軽減します。
<br>
<br>
たとえば、すべてのWebサイトが以下のようなハードドライブに格納されている場合:
<ul>
   <li>各Webサイトには、/ wwwrootディレクトリの下に独自のルートディレクトリがあります。</li>
   <li>Webサイトのルートディレクトリは、修飾されたドメイン名として指定されます。たとえば、 "www.example.com"のディレクトリは/wwwroot/www.example.com/です。</li>
   <li>ドキュメントルートは、Webサイトのルートディレクトリの下にある "html /"サブディレクトリです。
"www.example.com"の場合は/wwwroot/www.example.com/html/です。</li>
   <li>CGIスクリプトのディレクトリは、Webサイトのルートディレクトリの下にある "cgi-bin /"サブディレクトリです。
"www.example.com"の場合は/wwwroot/www.example.com/cgi-bin/です</li>
</ul> 
  
バーチャルホストテンプレートは以下のように設定する必要があります:
<ul>
	<li>"バーチャルホストルート"は、/wwwroot/$VH_NAME/"に設定する必要があります。</li>
	<li>"ドキュメントルート"は、"$VH_ROOT/html/"または "/wwwroot/$VH_NAME/html/"に設定する必要があり、前者が優先されます。</li>
	<li>"CGI"コンテキストを追加するには、 "URI"を "/ cgi-bin /"に設定、 "Path"を "$VH_ROOT/cgi-bin/"または "/wwwroot/$VH_NAME/cgi-bin"に設定する必要があり、前者が優先されます。</li>
</ul>	 

すべてのWebサイトがポート80で使用可能な場合は、リスナーを作成してポート80のすべてのインターフェースにバインドし、そのリスナーの名前を「マップされたリスナー」構成に追加することができます。.<br>
<br>
次に、各Webサイトのメンバーバーチャルホストを設定する必要があります。 メンバーバーチャルホストのプロパティは次のとおりです:
<ul>
	<li>バーチャルホスト名：バーチャルホストのルートを何らかの形で（例えば、その後にディレクトリの名前を付け、ドメイン名がバーチャルホスト名と同じように）判別できる場合は、おそらく唯一のプロパティーを設定する必要があります。 </li>
	<li>ドメイン：ウェブサイトの修飾ドメイン名が「バーチャルホスト名」と異なる場合に設定する必要があります。 </li>
	<li>エイリアス：このWebサイトのエイリアスがある場合は設定する必要があります。</li>
	<li>バーチャルホストルート：ウェブサイトのルートディレクトリは、「バーチャルホスト名」で判断できない場合にのみ設定する必要があります。</li>
</ul>
「バーチャルホスト名」が「ドメイン」に等しく、バーチャルホストのルートディレクトリが「バーチャルホスト名」にちなんで名付けられ、エイリアスがないため、「www.example.com」では、 「バーチャルホスト名」を「www.example.com」に設定します。
このように新しいバーチャルホストをすべて整理する場合は、メンバーバーチャルホストに適切な「バーチャルホスト名」を追加するだけです。 


END_A

SEE_ALSO: 
[END_QA]



########## PAGE SECION #############


[PAGE]
ID: HowTo_QA 
NAME: HOW-TOs

PREV_NAV: security.html = SECURITY
NEXT_NAV: Faq_QA.html = FAQs
TOP_NAV: index.html = INDEX

DESCR: 
END_DESCR

SEE_ALSO: 
[END_PAGE]


[END_QADOC]
