[HELPDOC]


########## SSL Private Key & Certificate ##########


[ITEM]
ID: keyFile
NAME: 秘密鍵ファイル
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: SSL秘密鍵ファイルのファイル名。キーファイルは暗号化しないでください。
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ]秘密鍵ファイルは、サーバーが実行されるユーザーへの読み取り専用アクセスを可能にするセキュリティ保護されたディレクトリに配置する必要があります。
END_TIPS

[END_ITEM]



[ITEM]
ID: certFile
NAME: 証明書ファイル
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: SSL証明書ファイルのファイル名。
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ]証明書ファイルは、サーバーが実行されるユーザーへの読み取り専用アクセスを可能にする安全なディレクトリに配置する必要があります。
END_TIPS

[END_ITEM]



[ITEM]
ID: certChain
NAME: チェーン証明書
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 証明書がチェーン証明書であるかどうかを指定します。 チェーン証明を格納するファイルは、PEM形式でなければならず、証明書は最下位レベル（実際のクライアントまたはサーバー証明書）から最上位（ルート）CAまでの連鎖の順序でなければなりません。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: CACertPath
NAME: CA証明書パス
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 証明機関（CA）の証明書が保存されるディレクトリを指定します。 これらの証明書は、クライアント証明書の認証およびサーバー証明書チェーンの構築に使用されます。サーバー証明書チェーンは、サーバー証明書に加えてブラウザーにも送信されます。
END_DESCR

SYNTAX: path
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: CACertFile
NAME: CA証明書ファイル
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: チェーン証明書の証明機関（CA）のすべての証明書を含むファイルを指定します。 このファイルは、PEMでエンコードされた証明書ファイルを単に優先順に連結したものです。 これは、「CA証明書パス」の代替として、またはこれに加えて使用することができる。 これらの証明書は、クライアント証明書の認証およびサーバー証明書チェーンの構築に使用されます。サーバー証明書チェーンは、サーバー証明書に加えてブラウザーにも送信されます。
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



########## SSL Protocol ##########


[ITEM]
ID: sslProtocol
NAME: プロトコルバージョン
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 使用するSSLプロトコルのバージョンを指定します。
{val}SSL v3.0{/}と{val}TLS v1.0{/}から選択できます。 OpenSSL 1.0.1以降、{val}TLS v1.1{/}および{val}TLS v1.2{/}もサポートされています。 
END_DESCR

EDITTIP: 一般>アドレス設定の<b>セキュリティ</b>で"はい"を選択する必要があります。
END_EDITTIP

EDITTIP: SSLバージョンと暗号化レベルについては、受け入れるすべてのものを選択してください。
END_EDITTIP

SYNTAX:
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: このフィールドを空白のままにすると、デフォルトでTLS v1.0、TLS v1.1、およびTLS v1.2が有効になります。
END_TIPS

[END_ITEM]



[ITEM]
ID: ciphers
NAME: 暗号
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: SSLハンドシェイクのネゴシエーション時に使用する暗号スイートを指定します。
LSWSは、SSL v3.0、TLS v1.0、およびTLS v1.2で実装された暗号スイートをサポートしています。
END_DESCR

SYNTAX: コロンで区切られた暗号仕様の文字列。
END_SYNTAX

EXAMPLE: ECDHE-RSA-AES128-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH
END_EXAMPLE

TIPS: [セキュリティ] SSL暗号のベストプラクティスに従ったデフォルトの暗号を使用する場合は、このフィールドを空白のままにすることをお勧めします。
END_TIPS

[END_ITEM]



[ITEM]
ID: enableECDHE
NAME: ECDH鍵交換を有効にする
REQUIRED: 
APPLY: 3
SINCE: 4.2.5
SEE_ALSO: 

DESCR: さらにSSL暗号化のために楕円曲線 Diffie-Hellman鍵交換を使用できます。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ] ECDH鍵交換は、RSA鍵だけを使用するより安全です。 ECDHとDHキーの交換は同等に安全です。


[パフォーマンス] ECDH鍵交換を有効にするとCPU負荷が増加し、RSA鍵だけを使用する場合よりも遅くなります。
END_TIPS

[END_ITEM]



[ITEM]
ID: enableDHE
NAME: DHキー交換を有効にする
REQUIRED: 
APPLY: 3
SINCE: 4.2.5
SEE_ALSO: 

DESCR: さらにSSL暗号化のためにDiffie-Hellman鍵交換を使用できます。 
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ] DHキーの交換は、RSAキーを使用するよりも安全です。 ECDHとDHキーの交換は同等に安全です。


[パフォーマンス] DHキー交換を有効にするとCPU負荷が増加し、ECDHキー交換とRSAよりも遅くなります。
ECDH鍵交換が利用可能である場合に優先される。
END_TIPS

[END_ITEM]



[ITEM]
ID: DHParam
NAME: DHパラメータ
REQUIRED: 
APPLY: 3
SINCE: 4.2.5
SEE_ALSO: 

DESCR: DHキー交換に必要なDiffie-Hellmanパラメータファイルの場所を指定します。
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



########## Security & features ##########


[ITEM]
ID: renegProtection
NAME: SSL再交渉保護
NS: LEO
REQUIRED: 
APPLY: 3
SINCE: 4.1.13
SEE_ALSO: 

DESCR: SSL再交渉保護を有効にするかどうかを指定します。
SSLハンドシェイクベースの攻撃に対して防御します。 デフォルト値は "Yes"です。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: enableSpdy
NAME: SPDY/HTTP2を有効にする
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: HTTP/2とSPDYは、ページロード時間を短縮する目的で、HTTPネットワークプロトコルの新バージョンです。
より多くの情報は<a href="http://en.wikipedia.org/wiki/HTTP/2">http://en.wikipedia.org/wiki/HTTP/2</a>で見つけることができます。
END_DESCR

SYNTAX: 有効にするプロトコルを確認します。 すべてのボックスをチェックしないと、SPDYとHTTP/2のサポート（デフォルト）が有効になります。
SPDYとHTTP/2を無効にする場合は、「なし」のみをチェックし、その他のチェックボックスはすべてオフにします。
END_SYNTAX


EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



########## OCSP Stapling ##########


[ITEM]
ID: enableStapling
NAME: OCSPステープルを有効にする
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: OCSPステープルを有効にするかどうかを決定します。これは、公開鍵証明書を検証するより効率的な方法です。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: ocspRespMaxAge
NAME: OCSPの応答最大年齢（秒）
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このオプションは、OCSP応答の許容可能な最大経過時間を設定します。
OCSP応答がこの最大年齢より古い場合、サーバーはOCSP応答者に新しい応答を要求します。
デフォルト値は{val}86400{/}です。
この値を{val}-1{/}に設定すると、最大年齢を無効にすることができます。
END_DESCR

SYNTAX: 秒数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: ocspResponder
NAME: OCSPレスポンダ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 使用するOCSPレスポンダのURLを指定します。
設定されていない場合、サーバーは認証局の発行者証明書に記載されているOCSPレスポンダに接続を試みます。
一部の発行者証明書には、OCSPレスポンダURLが指定されていない場合があります。
END_DESCR

SYNTAX: {val}http：//{/}で始まるURL
END_SYNTAX

EXAMPLE: {val}http://rapidssl-ocsp.geotrust.com {/}
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: ocspCACerts
NAME: OCSP CA証明書
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: OCSP認証局（CA）証明書が格納されるファイルの場所を指定します。
これらの証明書は、OCSPレスポンダからのレスポンスを確認するために使用されます（また、そのレスポンスが偽装されていないか、または妥協されていないことを確認してください）。
このファイルには、証明書チェーン全体が含まれている必要があります。
このファイルにルート証明書が含まれていない場合、LSWSはファイルに追加することなくシステムディレクトリのルート証明書を見つけることができますが、この検証に失敗した場合はルート証明書をこのファイルに追加してください。


この設定はオプションです。 この設定が設定されていない場合、サーバーは自動的に{ITEM=CACertFile}をチェックします。
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX1

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



########## Client Verification ##########


[ITEM]
ID: clientVerify
NAME: クライアントの検証
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR:{ent_version}クライアント証明書認証のタイプを指定します。
使用できるタイプは次のとおりです：
<ul>
<li><b>None:</b> クライアント証明書は必要ありません。</li>
<li><b>Optional:</b> クライアント証明書はオプションです。</li>
<li><b>Require:</b> クライアントには有効な証明書が必要です。</li>
<li><b>Optional_no_ca:</b> オプションと同じです。</li>
</ul>
デフォルトは "None"です。
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:  "None"または "Require"をお勧めします。
END_TIPS

[END_ITEM]



[ITEM]
ID: verifyDepth
NAME: 検証の深さ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR:{ent_version}クライアントに有効な証明書がないと判断する前に、証明書の検証の深さを指定します。
デフォルトは "1"です。
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: crlPath
NAME: クライアントの失効パス
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR:{ent_version}取り消されたクライアント証明書のPEMエンコードされたCA CRLファイルを含むディレクトリを指定します。
このディレクトリのファイルはPEMでエンコードする必要があります。
これらのファイルは、ハッシュファイル名、hash-value.rNによってアクセスされます。
ハッシュファイル名の作成については、openSSLまたはApache mod_sslのドキュメントを参照してください。
END_DESCR

SYNTAX: パス 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: crlFile
NAME: クライアント失効ファイル
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR:{ent_version}取り消されたクライアント証明書を列挙するPEMエンコードCA CRLファイルを含むファイルを指定します。 これは、代わりに、または{ITEM=crlPath}に加えて使用することができます。 
END_DESCR

SYNTAX: ファイル名への絶対パス又は$SERVER_ROOTからの相対パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



############# Tables #############


[TBL]
ID: sslCert
NAME: SSL秘密鍵と証明書
NS: LEO

DESCR: すべてのSSLリスナーには、ペアのSSL秘密鍵とSSL証明書が必要です。
複数のSSLリスナーは、同じ鍵と証明書を共有できます。


OpenSSLなどのSSLソフトウェアパッケージを使用して、SSL秘密鍵を自分で生成することができます。
SSL証明書は、VeriSignやThawteのような認可された証明書の発行者から購入することもできます。
自分で証明書に署名することもできます。
自己署名証明書はWebブラウザから信頼されないため、重要なデータを含む公開Webサイトでは使用しないでください。
ただし、自己署名証明書は内部使用に十分適しており、
例えば LiteSpeed Web ServerのWebAdminコンソールへのトラフィックを暗号化します。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: sslProtocolSetting
NAME: SSLプロトコル
NS: LEO

DESCR: リスナーが受け入れたSSLプロトコルをカスタマイズします。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: sslOCSP
NAME: OCSPステープリング
NS: LEO

DESCR: オンライン証明書ステータスプロトコル（OCSP）は、デジタル証明書が有効かどうかを確認するより効率的な方法です。
OCSP応答者である他のサーバーと通信して、証明書失効リスト（CRL）をチェックする代わりに証明書が有効であることを確認します。

OCSPステープリングは、このプロトコルのさらなる改良であり、証明書が要求されるたびにではなく、定期的な間隔でサーバーがOCSPレスポンダを確認できるようにします。
詳細については、<a href="http://en.wikipedia.org/wiki/OCSP_Stapling">OCSP Wikipedia</a>のページをご覧ください。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: sslClientVerify
NAME: クライアントの検証
NS: LEO

DESCR: 
END_DESCR

SEE_ALSO: 
[END_TBL]



############# Pages #############


[PAGE]
ID: Listeners_SSL_Help
NAME: リスナーSSL
NS: LEO

DESCR: 
END_DESCR

SEE_ALSO: 
[END_PAGE]


[END_HELPDOC]
