[HELPDOC]


########## New Context ##########


[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: L
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 作成されるコンテキストのタイプによって、その用途が決まります。


<b>リダイレクト</b>コンテキストは、内部リダイレクトURIまたは外部リダイレクトURIを設定するために使用されます。<br>
<b>ロードバランサ</b>コンテキストは、そのコンテキストに異なるクラスタを割り当てるために使用されます。
END_DESCR

EDITTIP: <b>ロードバランサ</b>コンテキストは、そのコンテキストに異なるクラスタを割り当てるために使用されます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストは、内部リダイレクトURIまたは外部リダイレクトURIを設定するために使用されます。
END_EDITTIP

[END_ITEM]



[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: E
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 作成されるコンテキストのタイプにより、その用途が決まります。:<br><br>
<b>静的</b>コンテキストを使用して、URIをドキュメントルートの外部またはその内部にあるディレクトリにマップできます。<br>
<b> Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。<br>
<b>サーブレット</b>コンテキストは、Webアプリケーションの下にある特定のサーブレットをインポートするために使用されます。<br>
<b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。<br>
<b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。<br>
<b>プロキシ</b>コンテキストにより、このバーチャルホストは、外部のWebサーバーまたはアプリケーションサーバーへのトランスペアレントリバースプロキシサーバーとして機能します。<br>
<b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。<br>
<b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。<br>
<b>リダイレクト</b>コンテキストで内部リダイレクトURIまたは外部リダイレクトURIを設定できます。<br>
<b>Rack/Rails</b>コンテキストは、特にRack / Railsアプリケーションに使用されます。<br>
END_DESCR

EDITTIP: <b>静的</b>コンテキストを使用して、URIを文書のルートの外またはその内部のディレクトリにマップできます。
END_EDITTIP

EDITTIP: <b>Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>サーブレット</b>コンテキストは、Webアプリケーションの下で特定のサーブレットをインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。
END_EDITTIP

EDITTIP: <b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。
END_EDITTIP

EDITTIP: <b>プロキシー</b>コンテキストでは、このバーチャルホストを透過的なリバースプロキシーサーバーとして外部Webサーバーまたはアプリケーションサーバーに提供できます。
END_EDITTIP

EDITTIP: <b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。
END_EDITTIP

EDITTIP: <b>ロードバランサー</ b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストでは、内部リダイレクトURIまたは外部リダイレクトURIを設定できます。
END_EDITTIP

EDITTIP: <b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。
END_EDITTIP

[END_ITEM]



[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: O
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: <b>静的</b>コンテキストを使用して、URIをドキュメントルートの外部またはその内部のディレクトリにマップできます。<br>
<b>Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。<br>
<b>サーブレット</b>コンテキストは、Webアプリケーションの下にある特定のサーブレットをインポートするために使用されます。<br>
<b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。<br>
<b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。<br>
<b>プロキシー</b>コンテキストにより、このバーチャルホストは、外部のWebサーバーまたはアプリケーションサーバーへのトランスペアレントリバースプロキシサーバーとして機能します。<br>
<b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。<br>
<b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。<br>
<b>リダイレクト</b>コンテキストで内部リダイレクトURIまたは外部リダイレクトURIを設定できます。<br>
<b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。<br>
<b>モジュールハンドラー</b>コンテキストは、ハンドラー型モジュールのマウントポイントです。<br>
END_DESCR

EDITTIP: <b>静的</b>コンテキストを使用して、URIを文書のルートの外またはその内部のディレクトリにマップできます。
END_EDITTIP

EDITTIP: <b>Java Web アプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>サーブレット</b>コンテキストは、Webアプリケーションの下で特定のサーブレットをインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。
END_EDITTIP

EDITTIP: <b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。
END_EDITTIP

EDITTIP: <b>プロキシー</b>コンテキストでは、このバーチャルホストを透過的な逆プロキシー・サーバーとして外部Webサーバーまたはアプリケーション・サーバーに使用できます。
END_EDITTIP

EDITTIP: <b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。
END_EDITTIP

EDITTIP: <b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストでは、内部リダイレクトURIまたは外部リダイレクトURIを設定できます。
END_EDITTIP

EDITTIP: <b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。
END_EDITTIP

EDITTIP: <b>モジュールハンドラ</b>コンテキストは、ハンドラタイプモジュールのマウントポイントです。
END_EDITTIP

[END_ITEM]



########## Context Definition ##########


[ITEM]
ID: uri
NAME: URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストのURIを指定します。 URIは "/"で始まる必要があります。
URIが「/」で終わる場合、このコンテキストはこのURIの下にすべてのサブURIを含みます。
END_DESCR

SYNTAX: URI
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: expuri
NAME: URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=location}

DESCR: このコンテキストのURIを指定します。 
END_DESCR

SYNTAX: URIは、プレーンURI（ "/"で始まる）またはPerl互換の正規表現URI（ "exp："で始まる）にすることができます。
プレーンURIが "/"で終わる場合、このコンテキストはこのURIの下にすべてのサブURIを含みます。
コンテキストがファイルシステム上のディレクトリにマップされている場合は、末尾に「/」を追加する必要があります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: servletEngine
NAME: サーブレットエンジン
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このWebアプリケーションを提供するサーブレットエンジンの名前を指定します。
サーブレットエンジンは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP:サーブレットエンジンが別のマシン上で動作する場合は、webappsディレクトリのコピーをローカルに作成することをお勧めします。
それ以外の場合は、アクセス可能な一般的なネットワークドライブにファイルを配置する必要があり、パフォーマンスに影響する可能性があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: javaServletEngine
NAME: サーブレットエンジン
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このWebアプリケーションを提供するサーブレットエンジンの名前を指定します。
サーブレットエンジンは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: サーブレットエンジンが別のマシン上で動作する場合は、webappsディレクトリのコピーをローカルに作成することをお勧めします。
それ以外の場合は、アクセス可能な一般的なネットワークドライブにファイルを配置する必要があり、パフォーマンスに影響する可能性があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: fcgiapp
NAME: FastCGI アプリ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: FastCGIアプリケーションの名前を指定します。
このアプリケーションは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: Fast CGIコンテキストは、Fast CGIアプリケーションのマウントポイントです。
Fast CGIアプリケーションは、サーバーレベルまたはバーチャルホストレベルであらかじめ定義されている必要があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: lsapiapp
NAME: LiteSpeed SAPIアプリ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストに接続するLiteSpeed SAPIアプリケーションの名前を指定します。
このアプリケーションは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: lbapp
NAME: ロードバランサー
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストに関連付けるロードバランサの名前を指定します。
このロードバランサはバーチャルアプリケーションであり、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extCluster
NAME: クラスタ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストへの要求を処理するクラスタを指定します。 
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: proxyWebServer
NAME: Webサーバー
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 外部Webサーバーの名前を指定します。
この外部Webサーバーは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: プロキシコンテキストは、このバーチャルホストを透過的なリバースプロキシサーバとして機能させ、外部のWebサーバまたはアプリケーションサーバに提供します。
END_EDITTIP

EDITTIP: 外部Webサーバーは、サーバーまたはバーチャルホストレベルで外部アプリケーションの下にあらかじめ定義されている必要があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: location
NAME: ロケーション
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=expuri}

DESCR: ファイルシステム内のこのコンテキストの対応する場所を指定します。 
END_DESCR

SYNTAX: $SERVER_ROOT、$VH_ROOT、または$DOC_ROOTに関連する絶対パスまたは絶対パスにすることができます。
$DOC_ROOTはデフォルトの相対パスであり省略することができます。


{ITEM=expuri}が正規表現であれば、一致した部分文字列を使用して "Root"文字列を形成することができます。
一致した部分文字列は、値 "$1" - "$9"で参照できます。
一致した文字列全体を参照するには、 "$0"と "＆"を使用できます。
さらに、クエリ文字列は、 "？" その後にクエリ文字列が続きます。
注意してください。 "＆"はクエリ文字列で "\＆"としてエスケープする必要があります。
END_SYNTAX

EXAMPLE: {ITEM=location}を{val}/home/john/web_examples{/}に設定した{val}/examples/{/}のような単純なURIは、リクエスト "/examples/foo/bar.html"をファイル "/home/john/web_examples/foo/bar.html"をマップします。

Apacheのmod_userdirをシミュレートするには、URIを{val}exp：^ /〜（[A-Za-z0-9] +）（。*）{/}に設定し、{ITEM=location}を{val}/home/$1/public_html$2{/}に設定します。
これらの設定で、URI /~john/foo/bar.html のリクエストが/home/john/public_html/foo/bar.htmlにマップします。
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rails_location
NAME: ロケーション
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=expuri}

DESCR: ファイルシステム内のこのコンテキストの対応する場所を指定します。
END_DESCR

EDITTIP: Rack/Railsコンテキストは、Rack/Railsアプリケーションを簡単に設定するためのコンテキストです。
[Location]フィールドには、Rack/Railsアプリケーションのルートロケーションを指定するだけで済みます。
END_EDITTIP

SYNTAX: $SERVER_ROOT、$VH_ROOT、または$DOC_ROOTに関連する絶対パスまたは相対パスにすることができます。
$DOC_ROOTはデフォルトの相対パスであり省略することができます。


{ITEM=expuri}が正規表現であれば、一致した部分文字列を使用して "Root"文字列を形成することができます。
一致した部分文字列は、値 "$1"-"$9"で参照できます。
一致した文字列全体を参照するには、 "$0"と "＆"を使用できます。
さらに、クエリ文字列は、 "？" その後にクエリ文字列が続きます。
注意してください。 "＆"はクエリ文字列で "\＆"としてエスケープする必要があります。
END_SYNTAX

EXAMPLE: {ITEM=location}の{val}/examples/{/}のような単純なURIは、{val}/home/john/web_examples{/}に設定すると、リクエスト "/examples/foo/bar.html"がファイル "/home/john/web_examples/foo/bar.html"にマップされます。 

Apacheのmod_userdirをシミュレートするには、 
URIを{val}exp: ^/~([A-Za-z0-9]+)(.*){/}に設定し, 
set {ITEM=location}を{val}/home/$1/public_html$2{/}に設定します。
これらの設定では、URIの/~john/foo/bar.htmlのリクエストは/home/john/public_html/foo/bar.htmlファイルにマップされます。
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: javaWebApp_location
NAME: ロケーション
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このWebアプリケーションのファイルを含むディレクトリを指定します。
これは "WEB-INF/web.xml"を含むディレクトリです。
END_DESCR

EDITTIP: JJava Webアプリケーションコンテキストは、AJPv13コンパイラJavaサーブレットエンジンで事前定義されたJavaアプリケーションを自動的にインポートするために使用されます。サーブレットエンジンは、外部アプリケーションセクション（サーバーまたはバーチャルホストレベルのいずれか）に設定する必要があります。
END_EDITTIP

EDITTIP: ロケーションはWEB-INF/サブディレクトリを含むWebアプリケーションファイルを含むディレクトリです。
END_EDITTIP

EDITTIP: Webサーバーは、自動的に "location"で指定されたドライバーのWEB-INF/web.xmlであるWebアプリケーションの構成ファイルをインポートします。
END_EDITTIP

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: cgi_path
NAME: パス
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: CGIスクリプトの場所を指定します。 
END_DESCR

EDITTIP: CGIコンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。
パスは絶対パスでも、$SERVER_ROOT、$VH_ROOT、$DOC_ROOT（デフォルト）でもかまいません。
パスとURIは、cgi-binディレクトリのために "/"で終わらなければなりません。
END_EDITTIP

EDITTIP: そのディレクトリに特定のスクリプトだけが必要な場合は、そのスクリプトのCGIコンテキストを作成することをお勧めします。
この場合、pathとURIはディレクトリである必要はありません。
たとえば、pathは〜/myapp/myscript.pl、URIは/myapp/myscript.plです。
その他のファイルはすべてCGIとして提供されません。
END_EDITTIP

SYNTAX: パスは{val}$VH_ROOT/myapp/cgi-bin/{/}のようなCGIスクリプトのグループが含まれているディレクトリにすることができます。
この場合、コンテキスト{ITEM=expuri}は{val}/app1/cgi/{/}のように "/"で終わらなければなりません。
パスは、{val}$VH_ROOT/myapp/myscript.pl{/}のように、CGIスクリプトを1つだけ指定することもできます。
このスクリプトには対応する{ITEM = expuri}{val}/myapp/myscript.pl{/}が必要です。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowBrowse
NAME: アクセス可能
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストにアクセスできるかどうかを指定します。
アクセスを拒否するには{val}いいえ{/}に設定してください。
この機能を使用して、指定したディレクトリが訪問されないように保護できます。
このコンテキストのコンテンツを更新している場合、またはこのディレクトリに特別なデータがある場合に使用することができます。
END_DESCR

EDITTIP: 静的コンテキストを使用して、URIをドキュメントルートの外部またはその内部のディレクトリにマップできます。
ディレクトリは、ドキュメントルート（デフォルト）、$VH_ROOTまたは$SERVER_ROOTの絶対パスまたは相対パスにすることができます。
END_EDITTIP

EDITTIP: 「アクセス可能」をチェックすると、このコンテキストで静的ファイルをブラウズできます。
静的ファイルを表示しないように無効にすることができます。
例えば コンテンツを更新するとき。
END_EDITTIP

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowSetUID
NAME: UIDの設定を許可する
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 設定されたUIDビットがCGIスクリプトに許可されるかどうかを指定します。
設定されたUIDビットが許可され、CGIスクリプトに対して設定されたUIDビットが有効になっている場合、CGIスクリプトがどのユーザーに代わって起動されたかにかかわらず、CGIプロセスのユーザーIDは、CGIスクリプトの所有者のユーザーIDに切り替わります。

デフォルトは「オフ」です。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ]可能であれば、UID CGIスクリプトを設定しないでください。
本質的にセキュリティリスクです。
END_TIPS

[END_ITEM]



[ITEM]
ID: externalredirect
NAME: 外部リダイレクト
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このリダイレクトが外部かどうかを指定します。
外部リダイレクトの場合は、{ITEM=statuscode}を指定し、{ITEM=destinationuri}は "/"または "http(s)：//"で開始できます。
内部リダイレクトの場合、{ITEM=destinationuri}は "/"で始まらなければなりません。
END_DESCR

EDITTIP: リダイレクトURIをここに設定します。
外部リダイレクトの場合は、ステータスコードを指定できます。
内部リダイレクトは「/」で始まり、外部リダイレクトは"/"または"http(s)：//"で始まります。
END_EDITTIP

SYNTAX: 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: statuscode
NAME: ステータスコード
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 外部リダイレクトの応答ステータスコードを指定します。
ステータスコードが300〜399の場合、{ITEM=destinationuri}を指定できます。
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: destinationuri
NAME: 宛先URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: リダイレクトのターゲットの場所を指定します。
このリダイレクトされたURIが別のリダイレクトコンテキストのURIにマップされると、リダイレクトされます。 
END_DESCR

SYNTAX: このURIは、"/"で始まる同じWebサイトの相対URIでもか、"http(s)：//"で始まる別のWebサイトを指す絶対URIでもかまいません。
{ITEM=expuri}に正規表現が含まれている場合、宛先は$1や$2などの一致した変数を参照できます。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extraHeaders
NAME: Extra Headers
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 追加される余分な応答ヘッダーを指定します。
1行に1つのヘッダーを追加できます。
親コンテンツから継承したヘッダーを無効にするには、"NONE"を入力します。
END_DESCR

SYNTAX: 各行に "[HeaderName]: [HeaderValue]"
END_SYNTAX

EXAMPLE: 
Cache-control: no-cache, no-store 

My-header: Custom header value
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowOverrideContext
NAME: 上書きを許可する
NS: E
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: アクセス制御ファイル内のどのディレクティブが許可されるかを指定します。
アクセス制御ファイルは、そのディレクトリの下にあるファイルのアクセシビリティを制御するためにディレクトリに置くことができます。 

<ul>
	<li>何もチェックしないと、継承されたデフォルト設定が使用されます。</li>
	<li>{val}None{/}をチェックすると、アクセス制御ファイルは無視されます。</li>
	<li>{val}Limit{/}をチェックすると、 "Order"、 "Allow from"、 "Deny from"の各ディレクティブが許可されます。</li>
	<li>{val}Auth{/}がチェックされていると、 "AuthGroupFile"、 "AuthName"、 "AuthType"、 "AuthUserFile"、および "Require"の各ディレクティブが許可されます。</li>
	<li>{val}FileInfo{/}がチェックされると、 "Satisfy"、 "AddDefaultCharset"、 "AddType"、 "DefaultType"、 "ForceType"、 "ExpiresActive"、 "ExpiresDefault"、 "ExpiresByType"、 "RedirectTemp" "、" RedirectPermanent "、" RewriteEngine "、" RewriteOptions "、" RewriteBase "、" RewriteCond "、および" RewriteRule "は許可されています。</li>
	<li>{val}Indexes{/}がチェックされている場合、ディレクティブ "DirectoryIndex"が許可されます。</li>
	<li>{val}Options{/}がチェックされていると、 "Options"ディレクティブが許可されます。</li>
</ul>

Allow Override設定には、サーバー、仮想ホスト、およびコンテキストの3つのレベルがあります。
サーバレベルでコンフィグレーションがチェックされていない場合、より低いレベルで有効になっているかどうかに関わらず、制御されたディレクティブはサーバ全体で無効になります。
サーバーレベルで何かが有効になっている場合、仮想ホストはデフォルトで同じ設定を継承します。
同様に、コンテキストレベルの設定は仮想ホスト設定から継承されます。
下位レベルでは、上位レベルで有効になっている設定は無効にできますが、上位レベルで無効になっている設定は有効にできません。
END_DESCR

EDITTIP:Allow Overrideは、サーバー/仮想ホストのレベル設定が有効な場合にのみ有効です。
何もチェックされていなければ、コンテキストはデフォルトで仮想ホスト設定を継承します。
"None"以外のチェックをすると、アクセス制御ファイルは無視されます。
"アクセス制御"がチェックされている場合、"Order"、"Allow"、"Deny"という指示が許可されます。
"認証"がチェックされている場合、 "AuthGroupFile"、 "AuthName"、 "AuthType"、 "AuthUserFile"、 "Require"の各ディレクティブが許可されます。
END_EDITTIP

SYNTAX: チェックボックス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]ディレクトリレベルの設定をカスタマイズする必要がない場合は、{val} None {/}をチェックしてください。
END_TIPS

[END_ITEM]



[ITEM]
ID: addMIMEType
NAME: MIMEタイプ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストに追加のMIMEタイプとマッピングを指定します。
新しいマッピングは、このコンテキストとその子コンテキストのもとで既存のマッピングを上書きします。

スクリプトとして実行するのではなく、PHPスクリプトをテキストファイルとして表示するには、MIMEタイプ "text/plain"への.phpマッピングをオーバーライドするだけです。 
END_DESCR

SYNTAX: MIME-type1 extension extension ..., MIME-type2 extension ...
		カンマを使用してMIMEタイプを区切り、スペースを使用して複数の拡張子を区切ります。
END_SYNTAX

EXAMPLE: {val}image/jpg jpeg jpg, image/gif gif{/}
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: mimetype
NAME: MIMEタイプ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: MIMEタイプは、タイプとサブタイプの形式で "タイプ/サブタイプ"で構成されます。 
END_DESCR

SYNTAX: 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: forceType
NAME: 強制MIMEタイプ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストの下にあるすべてのファイルは、指定すると、ファイルの接尾辞に関係なくMIMEタイプが指定された静的ファイルとして提供されます。
       {val} NONE {/}に設定すると、継承された強制タイプの設定は無効になります。
END_DESCR

SYNTAX: MIMEタイプまたはNONE。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: defaultType
NAME: デフォルトのMIMEタイプ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: この型を指定すると、ドキュメントの接尾辞でMIMEタイプのマッピングを判別できない場合、または接尾辞がない場合にこの型が使用されます。
       指定しない場合、デフォルト値{val}application/octet-stream{/}が使用されます。
END_DESCR

SYNTAX: MIMEタイプ
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: realm
NAME: レルム
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストの認可レルムを指定します。
このコンテキストにアクセスするには、有効なユーザー名とパスワードを指定する必要があります。
{TBL=VHSecurity_Help#realms}は{PAGE = VHSecurity_Help}セクションに設定されています。
この設定では、各レルムの{ITEM=VHSecurity_Help#realmName}が使用されます。
END_DESCR

EDITTIP: コンテキストは、バーチャルホストセキュリティセクションで設定されている定義済みのレルムで保護することができます。
必要に応じて、代替名と追加要件を指定することができます。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: authName
NAME: 認証名
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 現在のコンテキストの認証レルムの代替名を指定します。
指定しない場合、元のレルム名が使用されます。
認証名は、ブラウザのログインポップアップに表示されます。
END_DESCR

SYNTAX: テキスト
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: required
NAME: 必要（許可ユーザー/グループ）
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストにアクセスできるユーザー/グループを指定します。
これにより、複数のコンテキストにわたって1つのユーザー/グループデータベース（{ITEM=realm}で指定）を使用できますが、そのデータベースの特定のユーザー/グループのみがこのコンテキストにアクセスできます。
END_DESCR

SYNTAX: 構文はApache Requireディレクティブと互換性があります。 例えば： 
<ul>
<li>{val}user username [username ...]{/} 

リストされたユーザーだけがこのコンテキストにアクセスできます。</li>
<li> {val}group groupid [groupid ...]{/}

リストされたグループに属するユーザーのみがこのコンテキストにアクセスできます。</li>
</ul>
この設定を指定しないと、すべての有効なユーザーがこのリソースにアクセスできます。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: accessAllowed
NAME: アクセス許可
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストでリソースにアクセスできるIPまたはサブネットワークを指定します。
{ITEM=accessDenied}とサーバー/バーチャルホスト・レベルのアクセス制御とともに、アクセシビリティは、クライアントのIPアドレスが入る最小の範囲によって決まります。 
END_DESCR

SYNTAX: IP/サブネットワークのカンマ区切りリスト。 
END_SYNTAX

EXAMPLE: サブネットワークは以下のように書くことができます {val}192.168.1.0/255.255.255.0{/}, {val}192.168.1{/}, or {val}192.168.1.*{/}.
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: accessDenied
NAME: アクセス拒否
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストでリソースにアクセスできないIPまたはサブネットワークを指定します。
{ITEM=accessAllowed}とサーバー/バーチャルホストレベルのアクセス制御とともに、アクセシビリティはクライアントのIPアドレスが入る最小の範囲で決まります。
END_DESCR

SYNTAX: IP/サブネットワークのカンマ区切りリスト。
END_SYNTAX

EXAMPLE: サブネットワークは以下のように書くことができます {val}192.168.1.0/255.255.255.0{/}, {val}192.168.1{/}, or {val}192.168.1.*{/}.
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extAuthorizer
NAME: Authorizer
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 権限のある/権限のないかの決定を生成するために使用できる外部アプリケーションを指定します。
現在、FastCGI Authorizerのみが使用可能です。
FastCGI Authorizerの役割の詳細については、{ext-href}http://www.fastcgi.com{ext-href-end}http://www.fastcgi.com{ext-href-end-a}を参照してください。 。
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rewriteInherit
NAME: 継承を書き直す
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 親コンテキストから書き換えルールを継承するかどうかを指定します。
書き換えが有効で継承されていない場合は、このコンテキストで定義されている書き換えのベースルールと書き換えルールが使用されます。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rewriteBase
NAME: 書き換えベース
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 書き換えルールのベースURLを指定します。
END_DESCR

SYNTAX: URL
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: addDefaultCharset
NAME: Add Default Charset
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to add a character set tag to the
	   "Content-Type" response header, when content type is either
	   "text/html" or "text/plain" without any parameters.
	   When set to {val}Off{/},  this function is disabled. When set to
	   {val}On{/}, either the character set specified by
	   {ITEM=defaultCharsetCustomized} or the default "iso-8859-1" will be added.
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: defaultCharsetCustomized
NAME: Customized Default Charset
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies a character set to be used when {ITEM=addDefaultCharset}
	   is {val}On{/}. This is optional. The default value is {val}iso-8859-1{/}.
	   This entry has no effect when {ITEM=addDefaultCharset} is
	   {val}Off{/}.
END_DESCR

SYNTAX: Name of a character set.
END_SYNTAX

EXAMPLE: utf-8
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: moduleNameSel
NAME: Module
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Name of the module. The module must be registered under the Server Module Configuration tab.  
Once it is registered, the module name will be available in the drop down box for the Listener and Virtual Host configurations.
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



############# Tables #############


[TBL]
ID: newContext
NAME: Context Attributes

[END_TBL]



[TBL]
ID: generalContext
NAME: Static Context
NS: E

DESCR: Context settings are used to specify special settings for files in a 
certain location. These settings can be used to bring in files outside of 
the document root (like Apache's Alias or AliasMatch directives), 
to protect a particular directory using authorization realms, or to 
block or restrict access to a particular directory within the document root.
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: generalContext
NAME: 静的コンテキスト
NS: O

DESCR: コンテキスト設定は、特定の場所にあるファイルの特別な設定を指定するために使用されます。
これらの設定は、ApacheのAliasやAliasMatchディレクティブのようなドキュメントルートの外部にファイルを持ち込み、認可領域を使用して特定のディレクトリを保護したり、ドキュメントルート内の特定のディレクトリへのアクセスをブロックまたは制限するために使用できます。

SEE_ALSO: 
[END_TBL]



[TBL]
ID: javaWebAppContext
NAME: Java Webアプリコンテキスト
NS: E

DESCR: Many people running Java applications use the servlet engine to serve static 
content as well. But no servlet engine is nearly as efficient as LiteSpeed Web Server for these processes. In order to improve the overall performance, 
LiteSpeed Web Server can be configured as a gateway server, which serves static content 
and forwards dynamic Java page requests to the servlet engine. 


LiteSpeed Web Server requires certain contexts to be defined in order to run a 
Java application. A Java Web App Context automatically creates all required 
contexts based on the Java web application's configuration file (WEB-INF/web.xml). 


There are a few points you need to keep in mind when setting up a Java Web App Context:

<ul>
<li>A {val}Servlet Engine{/} external application must be set up in {PAGE=ExtApp_Help} 
before Java Web App Context can be set up.<li> 
<li>A {PAGE=ScriptHandler_Help} for .jsp files should be defined as well.</li>
<li>If the web application is packed into a .war file, the .war file must be expanded. 
The server cannot access compressed archive files.</li>
<li>For the same resources, the same URL should be used no matter whether it is accessed 
through LiteSpeed Web Server or through the servlet engine's built-in HTTP server.


For example, 
  Tomcat 4.1 is installed under /opt/tomcat. Files for the "examples" web application are 
  located at /opt/tomcat/webapps/examples/. Through Tomcat's built-in HTTP server, 
  the "examples" web application is thus accessed with a URI like "/examples/***". 
  The corresponding Java Web App Context should thus be configured: 
  {ITEM=expuri} = {val}/examples/{/}, {ITEM=location} = {val}/opt/tomcat/webapps/examples/{/}.</li>
  </ul>
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: javaWebAppContext
NAME: Java Webアプリコンテキスト
NS: O

DESCR: Javaアプリケーションを実行している多くの人々は、サーブレットエンジンを使用して静的コンテンツを提供しています。
しかし、サーブレットエンジンは、これらのプロセスではLiteSpeed Web Serverほど効率的ではありません。
全体のパフォーマンスを向上させるために、LiteSpeed Web Serverをゲートウェイサーバーとして構成することができます。ゲートウェイサーバーは静的コンテンツを処理し、動的Javaページ要求をサーブレットエンジンに転送します。 


LiteSpeed Web Serverでは、Javaアプリケーションを実行するために特定のコンテキストを定義する必要があります。
Java Webアプリケーションコンテキストは、Java Webアプリケーションの構成ファイル（WEB-INF/web.xml）に基づいて、必要なすべてのコンテキストを自動的に作成します。 


There are a few points you need to keep in mind when setting up a Java Web App Context:

<ul>
<li>A {val}Servlet Engine{/} external application must be set up in {PAGE=ExtApp_Help} 
before Java Web App Context can be set up.</li> 
<li>A {PAGE=ScriptHandler_Help} for .jsp files should be defined as well.</li>
<li>If the web application is packed into a .war file, the .war file must be expanded. 
The server cannot access compressed archive files.</li>
<li>For the same resources, the same URL should be used no matter whether it is accessed 
through LiteSpeed Web Server or through the servlet engine's built-in HTTP server.

For example, 
  Tomcat 4.1 is installed under /opt/tomcat. Files for the "examples" web application are 
  located at /opt/tomcat/webapps/examples/. Through Tomcat's built-in HTTP server, 
  the "examples" web application is thus accessed with a URI like "/examples/***". 
  The corresponding Java Web App Context should thus be configured: 
  {ITEM=expuri} = {val}/examples/{/}, {ITEM=javaWebApp_location} = {val}/opt/tomcat/webapps/examples/{/}.</li>
  </ul>
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: servletContext
NAME: サーブレットコンテキスト
NS: E

DESCR: サーブレットは、サーブレットコンテキストを介して個別にインポートできます。
サーブレットコンテキストは、サーブレットのURIとサーブレットエンジンの名前を指定するだけです。
Webアプリケーション全体をインポートしたくない場合や、異なるサーブレットを異なる認可レルムで保護したい場合にのみ、これを使用する必要があります。
このURIには、{TBL=javaWebAppContext}と同じ要件があります。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: servletContext
NAME: サーブレットコンテキスト
NS: O

DESCR: サーブレットは、サーブレットコンテキストを介して個別にインポートできます。
サーブレットコンテキストは、サーブレットのURIとサーブレットエンジンの名前を指定するだけです。
Webアプリケーション全体をインポートしたくない場合や、異なるサーブレットを異なる認可レルムで保護したい場合にのみ、これを使用する必要があります。
このURIには、{TBL=javaWebAppContext}と同じ要件があります。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: fcgiContext
NAME: FastCGIコンテキスト
NS: E

DESCR: FastCGIアプリケーションは直接使用することはできません。
FastCGIアプリケーションは、スクリプトハンドラとして構成するか、FastCGIコンテキストを介してURLにマップする必要があります。
FastCGIコンテキストは、URIをFastCGIアプリケーションに関連付けます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: fcgiContext
NAME: FastCGIコンテキスト
NS: O

DESCR: FastCGIアプリケーションは直接使用することはできません。
FastCGIアプリケーションは、スクリプトハンドラとして構成するか、FastCGIコンテキストを介してURLにマップする必要があります。
FastCGIコンテキストは、URIをFastCGIアプリケーションに関連付けます。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lsapiContext
NAME: LiteSpeed SAPI Context
NS: E

DESCR: External applications cannot be used directly. They must be either configured as 
a script handler or mapped to a URL through a context. An LiteSpeed SAPI Context will 
associate a URI with an LSAPI (LiteSpeed Server Application Programming Interface) application.
Currently PHP, Ruby and Python have LSAPI modules. LSAPI, as it is developed specifically for
LiteSpeed web server, is the most efficient way to communicate with LiteSpeed web server.  
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lsapiContext
NAME: LiteSpeed SAPIコンテキスト
NS: O

DESCR: 外部アプリケーションは直接使用することはできません。
スクリプトハンドラとして設定するか、コンテキストを介してURLにマップする必要があります。
LiteSpeed SAPIコンテキストは、URIをLSAPI（LiteSpeed Server Application Programming Interface）アプリケーションに関連付けます。
現在PHP、Ruby、PythonにはLSAPIモジュールがあります。
LiteSpeed Webサーバー用に特別に開発されたLSAPIは、LiteSpeed Webサーバーと通信するための最も効率的な方法です。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: proxyContext
NAME: プロキシコンテキスト
NS: E

DESCR: プロキシコンテキストは、このバーチャルホストを透過的なリバースプロキシサーバとして有効にします。
このプロキシサーバーは、HTTPプロトコルをサポートするWebサーバーまたはアプリケーションサーバーの前で実行できます。
このバーチャルホストがプロキシする外部Webサーバーは、プロキシコンテキストを設定する前に{PAGE=ExtApp_Help}で定義されている必要があります。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: proxyContext
NAME: プロキシコンテキスト
NS: O

DESCR: プロキシコンテキストは、このバーチャルホストを透過的なリバースプロキシサーバとして有効にします。
このプロキシサーバーは、HTTPプロトコルをサポートするWebサーバーまたはアプリケーションサーバーの前で実行できます。
このバーチャルホストがプロキシする外部Webサーバーは、プロキシコンテキストを設定する前に{PAGE=ExtApp_Help}で定義されている必要があります。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: cgiContext
NAME: CGIコンテキスト
NS: E

DESCR: CGIコンテキストは、特定のディレクトリ内のスクリプトをCGIスクリプトとして定義します。
このディレクトリは、ドキュメントルートの内側または外側にすることができます。
このディレクトリの下にあるファイルが要求されると、サーバは実行可能かどうかにかかわらず、常にCGIスクリプトとして実行しようとします。
このように、CGIコンテキスト下のファイルの内容は常に保護されており、静的なコンテンツとして読み込むことができません。
すべてのCGIスクリプトをディレクトリに置いて、それらにアクセスするためのCGIコンテキストを設定することをお勧めします。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: cgiContext
NAME: CGIコンテキスト
NS: O

DESCR: CGIコンテキストは、特定のディレクトリ内のスクリプトをCGIスクリプトとして定義します。
このディレクトリは、ドキュメントルートの内側または外側にすることができます。
このディレクトリの下にあるファイルが要求されると、サーバは実行可能かどうかに関わらず、常にCGIスクリプトとして実行しようとします。
このように、CGIコンテキスト下のファイルの内容は常に保護されており、静的なコンテンツとして読み込むことができません。
すべてのCGIスクリプトをディレクトリに置いて、それらにアクセスするためのCGIコンテキストを設定することをお勧めします。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: loadBalancerContext
NAME: ロードバランサコンテキスト
NS: L

DESCR: ロードバランサコンテキストを使用して、1つのURIまたはURIのグループを別の場所に転送することができます。
宛先URIは、同じWebサイトまたは別のWebサイトを指す絶対URIのいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lbContext
NAME: ロードバランサコンテキスト
NS: E

DESCR: 他の外部アプリケーションと同様に、ロードバランサワーカーアプリケーションは直接使用できません。
それらは、コンテキストを介してURLにマップされなければなりません。
ロードバランサコンテキストは、ロードバランサワーカーによって負荷分散されるURIを関連付けます。 
END_DESCR


SEE_ALSO: 
[END_TBL]



[TBL]
ID: lbContext
NAME: ロードバランサコンテキスト
NS: O

DESCR: 他の外部アプリケーションと同様に、ロードバランサワーカーアプリケーションは直接使用できません。
それらは、コンテキストを介してURLにマップされなければなりません。
ロードバランサコンテキストは、ロードバランサワーカーによって負荷分散されるURIを関連付けます。 
END_DESCR


SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: L

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: E

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: O

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsContext
NAME: Rack/Railsコンテキスト
NS: E

DESCR: Rack/Railsコンテキストは、Ruby Rack/Railsアプリケーションを簡単に設定する方法を提供します。
Rack/RailsアプリケーションをRack/Railsコンテキストに追加するには、URLとアプリケーションのルートディレクトリのみをマウントする必要があります。
外部アプリケーションを定義したり、404ハンドラを追加したり、ルールを書き直すなど、すべての問題を解決する必要はありません。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsContext
NAME: Rack/Railsコンテキスト
NS: O

DESCR: Rack/Railsコンテキストは、Ruby Rack/Railsアプリケーションを簡単に設定する方法を提供します。
Rack/RailsアプリケーションをRack/Railsコンテキストに追加するには、URLとアプリケーションのルートディレクトリのみをマウントする必要があります。
外部アプリケーションを定義したり、404ハンドラを追加したり、ルールを書き直すなど、すべての問題を解決する必要はありませ
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: moduleContext
NAME: モジュールハンドラコンテキスト

DESCR: モジュールハンドラコンテキストは、登録されたモジュールにURIを関連付けます。
モジュールは[サーバーモジュールの構成]タブに登録する必要があります。
END_DESCR

SEE_ALSO: 
[END_TBL]



################ Pages ################


[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: L

DESCR: コンテキストとは、共通の親URLを持つURLを使用して検索できるリソースのセットです。
共通の親URLは、コンテキストのIDです。
Webサイトはコンテキストで構成されています。たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。 "/cgi-bin/"はCGIアプリケーション専用のコンテキストです。
ウェブサイトをURLツリーと考えると、すべてのブランチは、分岐ノードのURLで識別できるコンテキストです。
コンテキストは、次の目的のために明示的に定義する必要があります。:
<ul>
  <li>デフォルト以外のクラスタを使用する場合</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]


[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: E

DESCR: LiteSpeed Web Serverの用語では、「コンテキスト」とはバーチャルリソースであり、共通の親URLであり、リソースのグループを識別します。
コンテキストは、Webサイトのディレクトリツリー内の異なるディレクトリと考えることができます。
たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。
"/cgi-bin/"は、このサイトのCGIアプリケーション専用のツリー上の文脈です。
コンテキストは、次の目的でLiteSpeedのWebAdminコンソールで明示的に定義することができます。:

<ul>
  <li>ドキュメントルートの外部にあるファイルシステムにアクセス可能にする。</li>
  <li>特定のリソースへのアクセスをブロックする。</li>
  <li>特定のリソースに対してユーザーレベルの認証を設定する。</li>
  <li>外部アプリケーションのマウントポイントを作成する。</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: O

DESCR: LiteSpeed Web Serverの用語では、「コンテキスト」とはバーチャルリソースであり、共通の親URLであり、リソースのグループを識別します。
コンテキストは、Webサイトのディレクトリツリー内の異なるディレクトリと考えることができます。
たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。
"/cgi-bin/"は、このサイトのCGIアプリケーション専用のツリー上の文脈です。
コンテキストは、次の目的でLiteSpeedのWebAdminコンソールで明示的に定義することができます。:

<ul>
  <li>ドキュメントルートの外部にあるファイルシステムにアクセス可能にする。</li>
  <li>特定のリソースへのアクセスをブロックする。</li>
  <li>特定のリソースに対してユーザーレベルの認証を設定する。</li>
  <li>外部アプリケーションのマウントポイントを作成する。</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]


[PAGE]
ID: Static_Context
NAME: 静的コンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Java_Web_App_Context 
NAME: Java Web アプリコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Servlet_Context 
NAME: サーブレットコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: FCGI_Context
NAME: Fast CGIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: LSAPI_Context 
NAME: LiteSpeed SAPIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Proxy_Context 
NAME: プロキシコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: CGI_Context 
NAME: CGIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: LB_Context 
NAME: ロードバランサコンテキスト
NS: L

DESCR:
END_DESCR

[END_PAGE]loadBalancerContext



[PAGE]
ID: LB_Context 
NAME: ロードバランサコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Redirect_Context 
NAME: リダイレクトコンテキスト
NS: LEO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Rails_Context 
NAME: Rack/Railsコンテキスト
NS:EO

DESCR:
END_DESCR

[END_PAGE]


[PAGE]
ID: Module_Context 
NAME: モジュールハンドラコンテキスト
NS: O

DESCR:
END_DESCR

[END_PAGE]


[END_HELPDOC]
